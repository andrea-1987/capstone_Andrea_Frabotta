{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\OneDrive\\\\Desktop\\\\web developer\\\\epicode\\\\esercizi\\\\capstone_Andrea_Frabotta\\\\view\\\\src\\\\pages\\\\MyWorks.jsx\",\n  _s = $RefreshSig$();\n// import React,{useState,useEffect} from \"react\";\n// import { MainLayout } from \"../layout/MainLayout\";\n// import { DefaultPagination } from \"../components/pagination/Pagination\";\n// import sessionData from \"../helper/session\";\n// import { UserCards } from \"../components/card/UserCard\";\n// import { isWorkLoading,worksError } from \"../redux/WorkCardSlice\";\n// import { useSelector } from \"react-redux\";\n// import useSession from \"../hooks/useSession\";\n// import { SidebarWithSearch } from \"../components/sidebar/SideBar\";\n// import { CustomSpinner } from \"../components/loading/Loader\";\n// import { ErrorAlert } from \"../components/error/Error\";\n\n// const MyWorks = () => {\n//   const isAuthenticated = useSession();\n//   const isLoading = useSelector(isWorkLoading);\n//   const error = useSelector(worksError);\n\n//   const [page, setPage] = useState(1);\n//   const [works, setWorks] = useState([]);\n//   const [totalPages, setTotalPages] = useState(0);\n\n//   const getMyWorks = async (e) => {\n//       try {\n//       const response = await fetch(\n//         `${process.env.REACT_APP_SERVER_BASE_URL}/${sessionData.role}/${sessionData._id}/myWorks?page=${page}`,\n//         {\n//           method: \"GET\",\n//           headers: {\n//             \"Content-type\": \"application/json\",\n//             authorization: sessionData,\n//           },\n//         }\n//       );\n//       const data = await response.json();\n//       setWorks(data.payload);\n//       setTotalPages(data.totalPages);\n//       console.log(data.payload.myWorks)\n//     } catch (error) {\n//       alert(\"Error fetching works:\", error);\n//     }\n//   };\n//   useEffect(() => {\n//     getMyWorks();\n//     window.scrollTo(0, 0);\n//   }, [page]);\n//   const onPageChange = (newPage) => {\n//     setPage(newPage);\n//   };\n\n//   return (\n//     <MainLayout>\n//       <SidebarWithSearch />\n//       {isAuthenticated && !isLoading && !error && works.myWorks && (\n//   works.myWorks.map((work) => (\n//     <div key={work._id}>\n//       <UserCards\n//         author={work.author}\n//         description={work.description}\n//         title={work.title}\n//         img={work.img}\n//         location={work.location}\n//         pubDate={work.pubDate}\n//         _id={work._id}\n//       />\n//     </div>\n//         ))\n//       )}\n//       <DefaultPagination\n//         onPageChange={onPageChange}\n//         currentPage={page}\n//         totalPage={totalPages}\n//       />\n//     </MainLayout>\n//   );\n// };\n\n// export default MyWorks;\nimport React, { useState, useEffect } from \"react\";\nimport { MainLayout } from \"../layout/MainLayout\";\nimport { DefaultPagination } from \"../components/pagination/Pagination\";\nimport sessionData from \"../helper/session\";\nimport { UserCards } from \"../components/card/UserCard\";\nimport useSession from \"../hooks/useSession\";\nimport { SidebarWithSearch } from \"../components/sidebar/SideBar\";\nimport { CustomSpinner } from \"../components/loading/Loader\";\nimport { ErrorAlert } from \"../components/error/Error\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyWorks = () => {\n  _s();\n  const isAuthenticated = useSession();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n  const [works, setWorks] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const fetchMyWorks = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/${sessionData.role}/${sessionData._id}/myWorks?page=${page}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          authorization: sessionData\n        }\n      });\n      const data = await response.json();\n      setWorks(data.payload);\n      setTotalPages(data.totalPages);\n      setError(null);\n    } catch (error) {\n      setError(\"Error fetching works: \" + error.message);\n    }\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    fetchMyWorks();\n    console.log(works);\n    window.scrollTo(0, 0);\n  }, [page]);\n  const onPageChange = newPage => {\n    setPage(newPage);\n  };\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: [/*#__PURE__*/_jsxDEV(SidebarWithSearch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isLoading && /*#__PURE__*/_jsxDEV(CustomSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }, this), error && /*#__PURE__*/_jsxDEV(ErrorAlert, {\n        message: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this), works.myWorks && works.myWorks.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [works.myWorks.map(work => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(UserCards, {\n            author: work.author,\n            description: work.description,\n            title: work.title,\n            img: work.img,\n            location: work.location,\n            pubDate: work.pubDate,\n            _id: work._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this)\n        }, work._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(DefaultPagination, {\n          onPageChange: onPageChange,\n          currentPage: page,\n          totalPage: totalPages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(MyWorks, \"5ngE4lRnBheYJTbQcReJDlpiN4Q=\", false, function () {\n  return [useSession];\n});\n_c = MyWorks;\nexport default MyWorks;\nvar _c;\n$RefreshReg$(_c, \"MyWorks\");","map":{"version":3,"names":["React","useState","useEffect","MainLayout","DefaultPagination","sessionData","UserCards","useSession","SidebarWithSearch","CustomSpinner","ErrorAlert","jsxDEV","_jsxDEV","Fragment","_Fragment","MyWorks","_s","isAuthenticated","isLoading","setIsLoading","error","setError","page","setPage","works","setWorks","totalPages","setTotalPages","fetchMyWorks","response","fetch","process","env","REACT_APP_SERVER_BASE_URL","role","_id","method","headers","authorization","data","json","payload","message","console","log","window","scrollTo","onPageChange","newPage","children","fileName","_jsxFileName","lineNumber","columnNumber","myWorks","length","map","work","author","description","title","img","location","pubDate","currentPage","totalPage","_c","$RefreshReg$"],"sources":["C:/Users/andre/OneDrive/Desktop/web developer/epicode/esercizi/capstone_Andrea_Frabotta/view/src/pages/MyWorks.jsx"],"sourcesContent":["// import React,{useState,useEffect} from \"react\";\r\n// import { MainLayout } from \"../layout/MainLayout\";\r\n// import { DefaultPagination } from \"../components/pagination/Pagination\";\r\n// import sessionData from \"../helper/session\";\r\n// import { UserCards } from \"../components/card/UserCard\";\r\n// import { isWorkLoading,worksError } from \"../redux/WorkCardSlice\";\r\n// import { useSelector } from \"react-redux\";\r\n// import useSession from \"../hooks/useSession\";\r\n// import { SidebarWithSearch } from \"../components/sidebar/SideBar\";\r\n// import { CustomSpinner } from \"../components/loading/Loader\";\r\n// import { ErrorAlert } from \"../components/error/Error\";\r\n\r\n// const MyWorks = () => {\r\n//   const isAuthenticated = useSession();\r\n//   const isLoading = useSelector(isWorkLoading);\r\n//   const error = useSelector(worksError);\r\n\r\n\r\n//   const [page, setPage] = useState(1);\r\n//   const [works, setWorks] = useState([]);\r\n//   const [totalPages, setTotalPages] = useState(0);\r\n\r\n\r\n\r\n//   const getMyWorks = async (e) => {\r\n//       try {\r\n//       const response = await fetch(\r\n//         `${process.env.REACT_APP_SERVER_BASE_URL}/${sessionData.role}/${sessionData._id}/myWorks?page=${page}`,\r\n//         {\r\n//           method: \"GET\",\r\n//           headers: {\r\n//             \"Content-type\": \"application/json\",\r\n//             authorization: sessionData,\r\n//           },\r\n//         }\r\n//       );\r\n//       const data = await response.json();\r\n//       setWorks(data.payload);\r\n//       setTotalPages(data.totalPages);\r\n//       console.log(data.payload.myWorks)\r\n//     } catch (error) {\r\n//       alert(\"Error fetching works:\", error);\r\n//     }\r\n//   };\r\n//   useEffect(() => {\r\n//     getMyWorks();\r\n//     window.scrollTo(0, 0);\r\n//   }, [page]);\r\n//   const onPageChange = (newPage) => {\r\n//     setPage(newPage);\r\n//   };\r\n  \r\n//   return (\r\n//     <MainLayout>\r\n//       <SidebarWithSearch />\r\n//       {isAuthenticated && !isLoading && !error && works.myWorks && (\r\n//   works.myWorks.map((work) => (\r\n//     <div key={work._id}>\r\n//       <UserCards\r\n//         author={work.author}\r\n//         description={work.description}\r\n//         title={work.title}\r\n//         img={work.img}\r\n//         location={work.location}\r\n//         pubDate={work.pubDate}\r\n//         _id={work._id}\r\n//       />\r\n//     </div>\r\n//         ))\r\n//       )}\r\n//       <DefaultPagination\r\n//         onPageChange={onPageChange}\r\n//         currentPage={page}\r\n//         totalPage={totalPages}\r\n//       />\r\n//     </MainLayout>\r\n//   );\r\n// };\r\n\r\n// export default MyWorks;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { MainLayout } from \"../layout/MainLayout\";\r\nimport { DefaultPagination } from \"../components/pagination/Pagination\";\r\nimport sessionData from \"../helper/session\";\r\nimport { UserCards } from \"../components/card/UserCard\";\r\nimport useSession from \"../hooks/useSession\";\r\nimport { SidebarWithSearch } from \"../components/sidebar/SideBar\";\r\nimport { CustomSpinner } from \"../components/loading/Loader\";\r\nimport { ErrorAlert } from \"../components/error/Error\";\r\n\r\nconst MyWorks = () => {\r\n  const isAuthenticated = useSession();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [page, setPage] = useState(1);\r\n  const [works, setWorks] = useState([]);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  const fetchMyWorks = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_SERVER_BASE_URL}/${sessionData.role}/${sessionData._id}/myWorks?page=${page}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            authorization: sessionData,\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      setWorks(data.payload);\r\n      setTotalPages(data.totalPages);\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(\"Error fetching works: \" + error.message);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    fetchMyWorks();\r\n    console.log(works)\r\n    window.scrollTo(0, 0);\r\n  }, [page]);\r\n\r\n  const onPageChange = (newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <MainLayout>\r\n      <SidebarWithSearch />\r\n      {isAuthenticated && (\r\n        <>\r\n          {isLoading && <CustomSpinner />}\r\n          {error && <ErrorAlert message={error} />}\r\n          {works.myWorks && works.myWorks.length > 0 && (\r\n            <>\r\n              {works.myWorks.map((work) => (\r\n                <div key={work._id}>\r\n                  <UserCards\r\n                    author={work.author}\r\n                    description={work.description}\r\n                    title={work.title}\r\n                    img={work.img}\r\n                    location={work.location}\r\n                    pubDate={work.pubDate}\r\n                    _id={work._id}\r\n                  />\r\n                </div>\r\n              ))}\r\n              <DefaultPagination\r\n                onPageChange={onPageChange}\r\n                currentPage={page}\r\n                totalPage={totalPages}\r\n              />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport default MyWorks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}