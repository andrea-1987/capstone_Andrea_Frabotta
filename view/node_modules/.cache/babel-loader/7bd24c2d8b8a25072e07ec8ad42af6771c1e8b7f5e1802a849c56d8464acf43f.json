{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\n\n// Funzione per ottenere il token JWT dall'archivio locale\nconst getToken = () => localStorage.getItem(\"auth\");\n\n// Middleware per includere il token JWT nelle intestazioni delle richieste\naxios.interceptors.request.use(config => {\n  const token = getToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Funzione per decodificare il token JWT e restituire i dati utente\nconst decodeToken = token => {\n  if (token) {\n    const decodedToken = jwtDecode(token);\n    return decodedToken;\n  }\n  return null;\n};\n\n// Azione asincrona per recuperare i dati utente\nexport const fetchUserData = createAsyncThunk(\"user/fetchUserData\", async (_, thunkAPI) => {\n  try {\n    const response = await axios.get(\"http://localhost:4040/users\");\n    const data = response.data;\n    // Decodifica il token JWT e restituisci i dati utente\n    return decodeToken(data.token);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\n// Stato iniziale dello slice\nconst initialState = {\n  userData: null,\n  isLoading: false,\n  error: null\n};\n\n// Slice per gestire lo stato degli utenti\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchUserData.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    });\n    builder.addCase(fetchUserData.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.userData = action.payload;\n    });\n    builder.addCase(fetchUserData.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\n\n// Selettore per ottenere i dati dell'utente dallo stato\nexport const selectUserData = state => state.user.userData;\n\n// Esporta il riduttore dello slice\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","jwtDecode","getToken","localStorage","getItem","interceptors","request","use","config","token","headers","Authorization","decodeToken","decodedToken","fetchUserData","_","thunkAPI","response","get","data","error","rejectWithValue","message","initialState","userData","isLoading","userSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","selectUserData","user","reducer"],"sources":["C:/Users/andre/OneDrive/Desktop/web developer/epicode/esercizi/capstone_Andrea_Frabotta/view/src/redux/UserSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\n// Funzione per ottenere il token JWT dall'archivio locale\r\nconst getToken = () => localStorage.getItem(\"auth\");\r\n\r\n// Middleware per includere il token JWT nelle intestazioni delle richieste\r\naxios.interceptors.request.use((config) => {\r\n  const token = getToken();\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Funzione per decodificare il token JWT e restituire i dati utente\r\nconst decodeToken = (token) => {\r\n  if (token) {\r\n    const decodedToken = jwtDecode(token);\r\n    return decodedToken;\r\n  }\r\n  return null;\r\n};\r\n\r\n// Azione asincrona per recuperare i dati utente\r\nexport const fetchUserData = createAsyncThunk(\r\n  \"user/fetchUserData\",\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:4040/users\");\r\n      const data = response.data;\r\n      // Decodifica il token JWT e restituisci i dati utente\r\n      return decodeToken(data.token);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n// Stato iniziale dello slice\r\nconst initialState = {\r\n  userData: null,\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\n// Slice per gestire lo stato degli utenti\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchUserData.pending, (state) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    });\r\n    builder.addCase(fetchUserData.fulfilled, (state, action) => {\r\n      state.isLoading = false;\r\n      state.userData = action.payload;\r\n    });\r\n    builder.addCase(fetchUserData.rejected, (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    });\r\n  },\r\n});\r\n\r\n// Selettore per ottenere i dati dell'utente dallo stato\r\nexport const selectUserData = (state) => state.user.userData;\r\n\r\n// Esporta il riduttore dello slice\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,YAAY;;AAEtC;AACA,MAAMC,QAAQ,GAAGA,CAAA,KAAMC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;;AAEnD;AACAJ,KAAK,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACzC,MAAMC,KAAK,GAAGP,QAAQ,CAAC,CAAC;EACxB,IAAIO,KAAK,EAAE;IACTD,MAAM,CAACE,OAAO,CAACC,aAAa,GAAI,UAASF,KAAM,EAAC;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,MAAMI,WAAW,GAAIH,KAAK,IAAK;EAC7B,IAAIA,KAAK,EAAE;IACT,MAAMI,YAAY,GAAGZ,SAAS,CAACQ,KAAK,CAAC;IACrC,OAAOI,YAAY;EACrB;EACA,OAAO,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAGhB,gBAAgB,CAC3C,oBAAoB,EACpB,OAAOiB,CAAC,EAAEC,QAAQ,KAAK;EACrB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,6BAA6B,CAAC;IAC/D,MAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAI;IAC1B;IACA,OAAOP,WAAW,CAACO,IAAI,CAACV,KAAK,CAAC;EAChC,CAAC,CAAC,OAAOW,KAAK,EAAE;IACd,OAAOJ,QAAQ,CAACK,eAAe,CAACD,KAAK,CAACE,OAAO,CAAC;EAChD;AACF,CACF,CAAC;;AAED;AACA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,IAAI;EACdC,SAAS,EAAE,KAAK;EAChBL,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMM,SAAS,GAAG3B,WAAW,CAAC;EAC5B4B,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACjB,aAAa,CAACkB,OAAO,EAAGC,KAAK,IAAK;MAChDA,KAAK,CAACR,SAAS,GAAG,IAAI;MACtBQ,KAAK,CAACb,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC;IACFU,OAAO,CAACC,OAAO,CAACjB,aAAa,CAACoB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC1DF,KAAK,CAACR,SAAS,GAAG,KAAK;MACvBQ,KAAK,CAACT,QAAQ,GAAGW,MAAM,CAACC,OAAO;IACjC,CAAC,CAAC;IACFN,OAAO,CAACC,OAAO,CAACjB,aAAa,CAACuB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACzDF,KAAK,CAACR,SAAS,GAAG,KAAK;MACvBQ,KAAK,CAACb,KAAK,GAAGe,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAME,cAAc,GAAIL,KAAK,IAAKA,KAAK,CAACM,IAAI,CAACf,QAAQ;;AAE5D;AACA,eAAeE,SAAS,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}