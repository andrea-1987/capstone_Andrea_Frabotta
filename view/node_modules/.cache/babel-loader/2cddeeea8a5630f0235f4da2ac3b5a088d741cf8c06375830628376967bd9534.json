{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\OneDrive\\\\Desktop\\\\web developer\\\\epicode\\\\esercizi\\\\capstone_Andrea_Frabotta\\\\view\\\\src\\\\pages\\\\MyWorks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { MainLayout } from \"../layout/MainLayout\";\nimport { DefaultPagination } from \"../components/pagination/Pagination\";\nimport sessionData from \"../helper/session\";\nimport { UserCards } from \"../components/card/UserCard\";\nimport { isWorkLoading, worksError } from \"../redux/WorkCardSlice\";\nimport { useSelector } from \"react-redux\";\nimport useSession from \"../hooks/useSession\";\nimport { SidebarWithSearch } from \"../components/sidebar/SideBar\";\nimport { CustomSpinner } from \"../components/loading/Loader\";\nimport { ErrorAlert } from \"../components/error/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyWorks = () => {\n  _s();\n  const isAuthenticated = useSession();\n  const isLoading = useSelector(isWorkLoading);\n  const error = useSelector(worksError);\n  const [page, setPage] = useState(1);\n  const [works, setWorks] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const getMyWorks = async e => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/${sessionData.role}/${sessionData._id}/myWorks?page=${page}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          authorization: sessionData\n        }\n      });\n      const data = await response.json();\n      setWorks(data.payload);\n      setTotalPages(data.totalPages);\n      console.log(data.payload.myWorks);\n    } catch (error) {\n      alert(\"Error fetching works:\", error);\n    }\n  };\n  useEffect(() => {\n    getMyWorks();\n    window.scrollTo(0, 0);\n  }, [page]);\n  const onPageChange = newPage => {\n    setPage(newPage);\n  };\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: [/*#__PURE__*/_jsxDEV(SidebarWithSearch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(CustomSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      message: \"Ops! Qualcosa \\xE8 andato storto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 31\n    }, this), isAuthenticated && !isLoading && !error && works[0].myWorks && works[0].myWorks.length > 0 && works[0].myWorks.map(work => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(UserCards, {\n        author: work.author,\n        description: work.description,\n        title: work.title,\n        img: work.img,\n        location: work.location,\n        pubDate: work.pubDate,\n        _id: work._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)\n    }, work._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)), /*#__PURE__*/_jsxDEV(DefaultPagination, {\n      onPageChange: onPageChange,\n      currentPage: page,\n      totalPage: totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(MyWorks, \"N/YFEi4SHdfbWrHGZFy6qSk12EE=\", false, function () {\n  return [useSession, useSelector, useSelector];\n});\n_c = MyWorks;\nexport default MyWorks;\n// import React, { useState, useEffect } from \"react\";\n// import { MainLayout } from \"../layout/MainLayout\";\n// import { DefaultPagination } from \"../components/pagination/Pagination\";\n// import sessionData from \"../helper/session\";\n// import { UserCards } from \"../components/card/UserCard\";\n// import useSession from \"../hooks/useSession\";\n// import { SidebarWithSearch } from \"../components/sidebar/SideBar\";\n// import { CustomSpinner } from \"../components/loading/Loader\";\n// import { ErrorAlert } from \"../components/error/Error\";\n\n// const MyWorks = () => {\n//   const isAuthenticated = useSession();\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const [page, setPage] = useState(1);\n//   const [works, setWorks] = useState([]);\n//   const [totalPages, setTotalPages] = useState(0);\n\n//   const fetchMyWorks = async () => {\n//     setIsLoading(true);\n//     try {\n//       const response = await fetch(\n//         `${process.env.REACT_APP_SERVER_BASE_URL}/${sessionData.role}/${sessionData._id}/myWorks?page=${page}`,\n//         {\n//           method: \"GET\",\n//           headers: {\n//             \"Content-type\": \"application/json\",\n//             authorization: sessionData,\n//           },\n//         }\n//       );\n//       const data = await response.json();\n//       if(response.ok){\n//         setWorks(data.payload);\n//         setTotalPages(data.totalPages);\n//         setError(null);\n//         console.log(works)\n//       }\n//     } catch (error) {\n//       setError(\"Error fetching works: \" + error.message);\n//     }\n//     setIsLoading(false);\n//   };\n\n//   useEffect(() => {\n//     fetchMyWorks();\n//     window.scrollTo(0, 0);\n//   }, [page]);\n\n//   const onPageChange = (newPage) => {\n//     setPage(newPage);\n//   };\n\n//   return (\n//     <MainLayout>\n//       <SidebarWithSearch />\n//       {isAuthenticated && (\n//         <>\n//           {isLoading && <CustomSpinner />}\n//           {error && <ErrorAlert message={error} />}\n//           {works.myWorks && works.myWorks.length > 0 && (\n//             <>\n//               {works.myWorks.map((work) => (\n//                 <div key={work._id}>\n//                   <UserCards\n//                     author={work.author}\n//                     description={work.description}\n//                     title={work.title}\n//                     img={work.img}\n//                     location={work.location}\n//                     pubDate={work.pubDate}\n//                     _id={work._id}\n//                   />\n//                 </div>\n//               ))}\n//               <DefaultPagination\n//                 onPageChange={onPageChange}\n//                 currentPage={page}\n//                 totalPage={totalPages}\n//               />\n//             </>\n//           )}\n//         </>\n//       )}\n//     </MainLayout>\n//   );\n// };\n\n// export default MyWorks;\nvar _c;\n$RefreshReg$(_c, \"MyWorks\");","map":{"version":3,"names":["React","useState","useEffect","MainLayout","DefaultPagination","sessionData","UserCards","isWorkLoading","worksError","useSelector","useSession","SidebarWithSearch","CustomSpinner","ErrorAlert","jsxDEV","_jsxDEV","MyWorks","_s","isAuthenticated","isLoading","error","page","setPage","works","setWorks","totalPages","setTotalPages","getMyWorks","e","response","fetch","process","env","REACT_APP_SERVER_BASE_URL","role","_id","method","headers","authorization","data","json","payload","console","log","myWorks","alert","window","scrollTo","onPageChange","newPage","children","fileName","_jsxFileName","lineNumber","columnNumber","message","length","map","work","author","description","title","img","location","pubDate","currentPage","totalPage","_c","$RefreshReg$"],"sources":["C:/Users/andre/OneDrive/Desktop/web developer/epicode/esercizi/capstone_Andrea_Frabotta/view/src/pages/MyWorks.jsx"],"sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport { MainLayout } from \"../layout/MainLayout\";\r\nimport { DefaultPagination } from \"../components/pagination/Pagination\";\r\nimport sessionData from \"../helper/session\";\r\nimport { UserCards } from \"../components/card/UserCard\";\r\nimport { isWorkLoading,worksError } from \"../redux/WorkCardSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useSession from \"../hooks/useSession\";\r\nimport { SidebarWithSearch } from \"../components/sidebar/SideBar\";\r\nimport { CustomSpinner } from \"../components/loading/Loader\";\r\nimport { ErrorAlert } from \"../components/error/Error\";\r\n\r\nconst MyWorks = () => {\r\n  const isAuthenticated = useSession();\r\n  const isLoading = useSelector(isWorkLoading);\r\n  const error = useSelector(worksError);\r\n\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [works, setWorks] = useState([]);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n\r\n\r\n  const getMyWorks = async (e) => {\r\n      try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_SERVER_BASE_URL}/${sessionData.role}/${sessionData._id}/myWorks?page=${page}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            authorization: sessionData,\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      setWorks(data.payload);\r\n      setTotalPages(data.totalPages);\r\n      console.log(data.payload.myWorks)\r\n    } catch (error) {\r\n      alert(\"Error fetching works:\", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getMyWorks();\r\n    window.scrollTo(0, 0);\r\n  }, [page]);\r\n  const onPageChange = (newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  \r\n  return (\r\n    <MainLayout>\r\n      <SidebarWithSearch />\r\n      {isLoading && <CustomSpinner />}\r\n      {!isLoading && error && <ErrorAlert message=\"Ops! Qualcosa Ã¨ andato storto\" />}\r\n      {isAuthenticated && !isLoading && !error && works[0].myWorks && works[0].myWorks.length > 0 && (\r\n  works[0].myWorks.map((work) => (\r\n    <div key={work._id}>\r\n      <UserCards\r\n        author={work.author}\r\n        description={work.description}\r\n        title={work.title}\r\n        img={work.img}\r\n        location={work.location}\r\n        pubDate={work.pubDate}\r\n        _id={work._id}\r\n      />\r\n    </div>\r\n        ))\r\n      )}\r\n      <DefaultPagination\r\n        onPageChange={onPageChange}\r\n        currentPage={page}\r\n        totalPage={totalPages}\r\n      />\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport default MyWorks;\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { MainLayout } from \"../layout/MainLayout\";\r\n// import { DefaultPagination } from \"../components/pagination/Pagination\";\r\n// import sessionData from \"../helper/session\";\r\n// import { UserCards } from \"../components/card/UserCard\";\r\n// import useSession from \"../hooks/useSession\";\r\n// import { SidebarWithSearch } from \"../components/sidebar/SideBar\";\r\n// import { CustomSpinner } from \"../components/loading/Loader\";\r\n// import { ErrorAlert } from \"../components/error/Error\";\r\n\r\n// const MyWorks = () => {\r\n//   const isAuthenticated = useSession();\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n//   const [page, setPage] = useState(1);\r\n//   const [works, setWorks] = useState([]);\r\n//   const [totalPages, setTotalPages] = useState(0);\r\n\r\n//   const fetchMyWorks = async () => {\r\n//     setIsLoading(true);\r\n//     try {\r\n//       const response = await fetch(\r\n//         `${process.env.REACT_APP_SERVER_BASE_URL}/${sessionData.role}/${sessionData._id}/myWorks?page=${page}`,\r\n//         {\r\n//           method: \"GET\",\r\n//           headers: {\r\n//             \"Content-type\": \"application/json\",\r\n//             authorization: sessionData,\r\n//           },\r\n//         }\r\n//       );\r\n//       const data = await response.json();\r\n//       if(response.ok){\r\n//         setWorks(data.payload);\r\n//         setTotalPages(data.totalPages);\r\n//         setError(null);\r\n//         console.log(works)\r\n//       }\r\n//     } catch (error) {\r\n//       setError(\"Error fetching works: \" + error.message);\r\n//     }\r\n//     setIsLoading(false);\r\n//   };\r\n  \r\n//   useEffect(() => {\r\n//     fetchMyWorks();\r\n//     window.scrollTo(0, 0);\r\n//   }, [page]);\r\n\r\n//   const onPageChange = (newPage) => {\r\n//     setPage(newPage);\r\n//   };\r\n\r\n//   return (\r\n//     <MainLayout>\r\n//       <SidebarWithSearch />\r\n//       {isAuthenticated && (\r\n//         <>\r\n//           {isLoading && <CustomSpinner />}\r\n//           {error && <ErrorAlert message={error} />}\r\n//           {works.myWorks && works.myWorks.length > 0 && (\r\n//             <>\r\n//               {works.myWorks.map((work) => (\r\n//                 <div key={work._id}>\r\n//                   <UserCards\r\n//                     author={work.author}\r\n//                     description={work.description}\r\n//                     title={work.title}\r\n//                     img={work.img}\r\n//                     location={work.location}\r\n//                     pubDate={work.pubDate}\r\n//                     _id={work._id}\r\n//                   />\r\n//                 </div>\r\n//               ))}\r\n//               <DefaultPagination\r\n//                 onPageChange={onPageChange}\r\n//                 currentPage={page}\r\n//                 totalPage={totalPages}\r\n//               />\r\n//             </>\r\n//           )}\r\n//         </>\r\n//       )}\r\n//     </MainLayout>\r\n//   );\r\n// };\r\n\r\n// export default MyWorks;\r\n"],"mappings":"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AAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IAAC,GATMI,IAAI,CAACvB,GAAG;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUb,CACA,CACF,eACDvC,OAAA,CAACX,iBAAiB;MAChB4C,YAAY,EAAEA,YAAa;MAC3BiB,WAAW,EAAE5C,IAAK;MAClB6C,SAAS,EAAEzC;IAAW;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEjB,CAAC;AAACrC,EAAA,CAnEID,OAAO;EAAA,QACaN,UAAU,EAChBD,WAAW,EACfA,WAAW;AAAA;AAAA0D,EAAA,GAHrBnD,OAAO;AAqEb,eAAeA,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}