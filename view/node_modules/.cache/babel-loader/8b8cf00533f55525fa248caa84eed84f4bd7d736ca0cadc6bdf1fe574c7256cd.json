{"ast":null,"code":"import { createSlice, creteAsyncThunk } from \"@reduxjs/toolkit\";\nimport AxiosClient from \"../client/client\";\nconst client = new AxiosClient();\nconst initialState = {\n  works: [],\n  isLoading: false,\n  error: null,\n  totalWorks: 0\n};\nexport const getAllWorks = creteAsyncThunk(`work/GETWORKS`, async () => {\n  return await client.get(\"/works\");\n});\nconst worksSlice = createSlice({\n  name: \"works\",\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(getAllWorks.pending, state => {\n      state.isLoading = true;\n    }).addCase(getAllWorks.fullfilled, (state, action) => {\n      state.isLoading = false;\n      state.totalWorks = action.payload.lenght;\n      state.works = action.payload;\n    }).addCase(getAllWorks.rejected, state => {\n      state.isLoading = false;\n      state.error = \"Ops , an error has occurred.\";\n    });\n  }\n});\nexport const allWorks = state => state.worksData.works;\nexport const isWorkLoading = state => state.worksData.isLoading;\nexport const worksError = state => state.worksData.error;\nexport default worksSlice.reducer;","map":{"version":3,"names":["createSlice","creteAsyncThunk","AxiosClient","client","initialState","works","isLoading","error","totalWorks","getAllWorks","get","worksSlice","name","extraReducers","builder","addCase","pending","state","fullfilled","action","payload","lenght","rejected","allWorks","worksData","isWorkLoading","worksError","reducer"],"sources":["C:/Users/andre/OneDrive/Desktop/web developer/epicode/esercizi/capstone_Andrea_Frabotta/view/src/redux/WorkCardSlice.js"],"sourcesContent":["import{createSlice,creteAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport AxiosClient from \"../client/client\";\r\nconst client = new AxiosClient();\r\n\r\nconst initialState={\r\n    works:[],\r\n    isLoading:false,\r\n    error:null,\r\n    totalWorks:0\r\n}\r\n\r\nexport const getAllWorks= creteAsyncThunk(\r\n    `work/GETWORKS`,\r\n    async()=>{\r\n        return await client.get(\"/works\")\r\n    }\r\n)\r\n\r\nconst worksSlice = createSlice({\r\n    name:\"works\",\r\n    initialState,\r\n    extraReducers:builder=>{\r\n        builder\r\n        .addCase(getAllWorks.pending,state=>{\r\n            state.isLoading=true\r\n        })\r\n        .addCase(getAllWorks.fullfilled,(state,action)=>{\r\n            state.isLoading=false\r\n            state.totalWorks=action.payload.lenght\r\n            state.works=action.payload\r\n        })\r\n        .addCase(getAllWorks.rejected, state=>{\r\n            state.isLoading=false\r\n            state.error = \"Ops , an error has occurred.\"\r\n        })\r\n    }\r\n})\r\n\r\nexport const allWorks = (state)=> state.worksData.works\r\nexport const isWorkLoading =state=> state.worksData.isLoading\r\nexport const worksError = state=> state.worksData.error\r\nexport default worksSlice.reducer"],"mappings":"AAAA,SAAOA,WAAW,EAACC,eAAe,QAAO,kBAAkB;AAC3D,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,MAAMC,MAAM,GAAG,IAAID,WAAW,CAAC,CAAC;AAEhC,MAAME,YAAY,GAAC;EACfC,KAAK,EAAC,EAAE;EACRC,SAAS,EAAC,KAAK;EACfC,KAAK,EAAC,IAAI;EACVC,UAAU,EAAC;AACf,CAAC;AAED,OAAO,MAAMC,WAAW,GAAER,eAAe,CACpC,eAAc,EACf,YAAS;EACL,OAAO,MAAME,MAAM,CAACO,GAAG,CAAC,QAAQ,CAAC;AACrC,CACJ,CAAC;AAED,MAAMC,UAAU,GAAGX,WAAW,CAAC;EAC3BY,IAAI,EAAC,OAAO;EACZR,YAAY;EACZS,aAAa,EAACC,OAAO,IAAE;IACnBA,OAAO,CACNC,OAAO,CAACN,WAAW,CAACO,OAAO,EAACC,KAAK,IAAE;MAChCA,KAAK,CAACX,SAAS,GAAC,IAAI;IACxB,CAAC,CAAC,CACDS,OAAO,CAACN,WAAW,CAACS,UAAU,EAAC,CAACD,KAAK,EAACE,MAAM,KAAG;MAC5CF,KAAK,CAACX,SAAS,GAAC,KAAK;MACrBW,KAAK,CAACT,UAAU,GAACW,MAAM,CAACC,OAAO,CAACC,MAAM;MACtCJ,KAAK,CAACZ,KAAK,GAACc,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDL,OAAO,CAACN,WAAW,CAACa,QAAQ,EAAEL,KAAK,IAAE;MAClCA,KAAK,CAACX,SAAS,GAAC,KAAK;MACrBW,KAAK,CAACV,KAAK,GAAG,8BAA8B;IAChD,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMgB,QAAQ,GAAIN,KAAK,IAAIA,KAAK,CAACO,SAAS,CAACnB,KAAK;AACvD,OAAO,MAAMoB,aAAa,GAAER,KAAK,IAAGA,KAAK,CAACO,SAAS,CAAClB,SAAS;AAC7D,OAAO,MAAMoB,UAAU,GAAGT,KAAK,IAAGA,KAAK,CAACO,SAAS,CAACjB,KAAK;AACvD,eAAeI,UAAU,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}