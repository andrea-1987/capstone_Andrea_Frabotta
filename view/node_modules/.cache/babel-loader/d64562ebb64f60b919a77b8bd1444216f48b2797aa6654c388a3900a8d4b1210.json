{"ast":null,"code":"// import { createAsyncThunk,createSlice } from \"@reduxjs/toolkit\";\n// import AxiosClient from \"../client/client\";\n// const client = new AxiosClient();\n\n// const initialState = {\n//   works: [],\n//   isLoading: false,\n//   error: null,\n//   totalWorks: 0,\n// };\n\n// export const getAllWorks = createAsyncThunk(`work/GETWORKS`, async () => {\n//   return await client.get(`/works`);\n// });\n\n// const worksSlice = createSlice({\n//     name: \"works\",\n//     initialState,\n//     extraReducers: (builder) => {\n//       builder\n//         .addCase(getAllWorks.pending, (state) => {\n//           state.isLoading = true;\n//         })\n//         .addCase(getAllWorks.fulfilled, (state, action) => { \n//           state.isLoading = false;\n//           state.totalWorks = action.payload.length;\n//           state.works = action.payload;\n//         })\n//         .addCase(getAllWorks.rejected, (state) => {\n//           state.isLoading = false;\n//           state.error = \"Ops, an error has occurred.\";\n//         });\n//     },\n//   });\n\n// export const allWorks = (state) => state.worksData.works;\n// export const isWorkLoading = (state) => state.worksData.isLoading;\n// export const worksError = (state) => state.worksData.error;\n// export default worksSlice.reducer;\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport AxiosClient from \"../client/client\";\nconst client = new AxiosClient();\nconst initialState = {\n  works: [],\n  isLoading: false,\n  error: null,\n  currentPage: 1,\n  pageSize: 10,\n  // Numero di elementi per pagina\n  totalWorks: 0\n};\nexport const getAllWorks = createAsyncThunk(`work/GETWORKS`, async (_, {\n  getState\n}) => {\n  const {\n    currentPage,\n    pageSize\n  } = getState().worksData;\n  const offset = (currentPage - 1) * pageSize; // Calcola l'offset per la query paginata\n  return await client.get(`/works?_start=${offset}&_limit=${pageSize}`);\n});\nconst worksSlice = createSlice({\n  name: \"works\",\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(getAllWorks.pending, state => {\n      state.isLoading = true;\n    }).addCase(getAllWorks.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.totalWorks = action.payload.totalCount; // Assicurati di ricevere il totale dei lavori dal server\n      state.works = action.payload.data;\n    }).addCase(getAllWorks.rejected, state => {\n      state.isLoading = false;\n      state.error = \"Ops, an error has occurred.\";\n    });\n  }\n});\nexport const allWorks = state => state.worksData.works;\nexport const isWorkLoading = state => state.worksData.isLoading;\nexport const worksError = state => state.worksData.error;\nexport const currentPage = state => state.worksData.currentPage;\nexport const totalWorks = state => state.worksData.totalWorks;\nexport default worksSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","AxiosClient","client","initialState","works","isLoading","error","currentPage","pageSize","totalWorks","getAllWorks","_","getState","worksData","offset","get","worksSlice","name","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","totalCount","data","rejected","allWorks","isWorkLoading","worksError","reducer"],"sources":["C:/Users/andre/OneDrive/Desktop/web developer/epicode/esercizi/capstone_Andrea_Frabotta/view/src/redux/WorkCardSlice.js"],"sourcesContent":["// import { createAsyncThunk,createSlice } from \"@reduxjs/toolkit\";\r\n// import AxiosClient from \"../client/client\";\r\n// const client = new AxiosClient();\r\n\r\n// const initialState = {\r\n//   works: [],\r\n//   isLoading: false,\r\n//   error: null,\r\n//   totalWorks: 0,\r\n// };\r\n\r\n// export const getAllWorks = createAsyncThunk(`work/GETWORKS`, async () => {\r\n//   return await client.get(`/works`);\r\n// });\r\n\r\n// const worksSlice = createSlice({\r\n//     name: \"works\",\r\n//     initialState,\r\n//     extraReducers: (builder) => {\r\n//       builder\r\n//         .addCase(getAllWorks.pending, (state) => {\r\n//           state.isLoading = true;\r\n//         })\r\n//         .addCase(getAllWorks.fulfilled, (state, action) => { \r\n//           state.isLoading = false;\r\n//           state.totalWorks = action.payload.length;\r\n//           state.works = action.payload;\r\n//         })\r\n//         .addCase(getAllWorks.rejected, (state) => {\r\n//           state.isLoading = false;\r\n//           state.error = \"Ops, an error has occurred.\";\r\n//         });\r\n//     },\r\n//   });\r\n  \r\n\r\n// export const allWorks = (state) => state.worksData.works;\r\n// export const isWorkLoading = (state) => state.worksData.isLoading;\r\n// export const worksError = (state) => state.worksData.error;\r\n// export default worksSlice.reducer;\r\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport AxiosClient from \"../client/client\";\r\nconst client = new AxiosClient();\r\n\r\nconst initialState = {\r\n  works: [],\r\n  isLoading: false,\r\n  error: null,\r\n  currentPage: 1,\r\n  pageSize: 10, // Numero di elementi per pagina\r\n  totalWorks: 0,\r\n};\r\n\r\nexport const getAllWorks = createAsyncThunk(`work/GETWORKS`, async (_, { getState }) => {\r\n  const { currentPage, pageSize } = getState().worksData;\r\n  const offset = (currentPage - 1) * pageSize; // Calcola l'offset per la query paginata\r\n  return await client.get(`/works?_start=${offset}&_limit=${pageSize}`);\r\n});\r\n\r\nconst worksSlice = createSlice({\r\n  name: \"works\",\r\n  initialState,\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getAllWorks.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getAllWorks.fulfilled, (state, action) => { \r\n        state.isLoading = false;\r\n        state.totalWorks = action.payload.totalCount; // Assicurati di ricevere il totale dei lavori dal server\r\n        state.works = action.payload.data;\r\n      })\r\n      .addCase(getAllWorks.rejected, (state) => {\r\n        state.isLoading = false;\r\n        state.error = \"Ops, an error has occurred.\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const allWorks = (state) => state.worksData.works;\r\nexport const isWorkLoading = (state) => state.worksData.isLoading;\r\nexport const worksError = (state) => state.worksData.error;\r\nexport const currentPage = (state) => state.worksData.currentPage;\r\nexport const totalWorks = (state) => state.worksData.totalWorks;\r\nexport default worksSlice.reducer;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,MAAMC,MAAM,GAAG,IAAID,WAAW,CAAC,CAAC;AAEhC,MAAME,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE,IAAI;EACXC,WAAW,EAAE,CAAC;EACdC,QAAQ,EAAE,EAAE;EAAE;EACdC,UAAU,EAAE;AACd,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGX,gBAAgB,CAAE,eAAc,EAAE,OAAOY,CAAC,EAAE;EAAEC;AAAS,CAAC,KAAK;EACtF,MAAM;IAAEL,WAAW;IAAEC;EAAS,CAAC,GAAGI,QAAQ,CAAC,CAAC,CAACC,SAAS;EACtD,MAAMC,MAAM,GAAG,CAACP,WAAW,GAAG,CAAC,IAAIC,QAAQ,CAAC,CAAC;EAC7C,OAAO,MAAMN,MAAM,CAACa,GAAG,CAAE,iBAAgBD,MAAO,WAAUN,QAAS,EAAC,CAAC;AACvE,CAAC,CAAC;AAEF,MAAMQ,UAAU,GAAGhB,WAAW,CAAC;EAC7BiB,IAAI,EAAE,OAAO;EACbd,YAAY;EACZe,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACV,WAAW,CAACW,OAAO,EAAGC,KAAK,IAAK;MACvCA,KAAK,CAACjB,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDe,OAAO,CAACV,WAAW,CAACa,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAACjB,SAAS,GAAG,KAAK;MACvBiB,KAAK,CAACb,UAAU,GAAGe,MAAM,CAACC,OAAO,CAACC,UAAU,CAAC,CAAC;MAC9CJ,KAAK,CAAClB,KAAK,GAAGoB,MAAM,CAACC,OAAO,CAACE,IAAI;IACnC,CAAC,CAAC,CACDP,OAAO,CAACV,WAAW,CAACkB,QAAQ,EAAGN,KAAK,IAAK;MACxCA,KAAK,CAACjB,SAAS,GAAG,KAAK;MACvBiB,KAAK,CAAChB,KAAK,GAAG,6BAA6B;IAC7C,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAMuB,QAAQ,GAAIP,KAAK,IAAKA,KAAK,CAACT,SAAS,CAACT,KAAK;AACxD,OAAO,MAAM0B,aAAa,GAAIR,KAAK,IAAKA,KAAK,CAACT,SAAS,CAACR,SAAS;AACjE,OAAO,MAAM0B,UAAU,GAAIT,KAAK,IAAKA,KAAK,CAACT,SAAS,CAACP,KAAK;AAC1D,OAAO,MAAMC,WAAW,GAAIe,KAAK,IAAKA,KAAK,CAACT,SAAS,CAACN,WAAW;AACjE,OAAO,MAAME,UAAU,GAAIa,KAAK,IAAKA,KAAK,CAACT,SAAS,CAACJ,UAAU;AAC/D,eAAeO,UAAU,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}