{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\OneDrive\\\\Desktop\\\\web developer\\\\epicode\\\\esercizi\\\\capstone_Andrea_Frabotta\\\\view\\\\src\\\\pages\\\\MyWorks.jsx\",\n  _s = $RefreshSig$();\n// import React,{useState,useEffect} from \"react\";\n// import { MainLayout } from \"../layout/MainLayout\";\n// import { DefaultPagination } from \"../components/pagination/Pagination\";\n// import sessionData from \"../helper/session\";\n// import { UserCards } from \"../components/card/UserCard\";\n// import { isWorkLoading,worksError } from \"../redux/WorkCardSlice\";\n// import { useSelector } from \"react-redux\";\n// import useSession from \"../hooks/useSession\";\n// import { SidebarWithSearch } from \"../components/sidebar/SideBar\";\n// import { CustomSpinner } from \"../components/loading/Loader\";\n// import { ErrorAlert } from \"../components/error/Error\";\n\n// const MyWorks = () => {\n//   const isAuthenticated = useSession();\n//   const isLoading = useSelector(isWorkLoading);\n//   const error = useSelector(worksError);\n\n//   const [page, setPage] = useState(1);\n//   const [works, setWorks] = useState([]);\n//   const [totalPages, setTotalPages] = useState(0);\n\n//   const getMyWorks = async (e) => {\n//       try {\n//       const response = await fetch(\n//         `${process.env.REACT_APP_SERVER_BASE_URL}/${sessionData.role}/${sessionData._id}/myWorks?page=${page}`,\n//         {\n//           method: \"GET\",\n//           headers: {\n//             \"Content-type\": \"application/json\",\n//             authorization: sessionData,\n//           },\n//         }\n//       );\n//       const data = await response.json();\n//       setWorks(data.payload);\n//       setTotalPages(data.totalPages);\n//       console.log(data.payload.myWorks)\n//     } catch (error) {\n//       alert(\"Error fetching works:\", error);\n//     }\n//   };\n//   useEffect(() => {\n//     getMyWorks();\n//     window.scrollTo(0, 0);\n//   }, [page]);\n//   const onPageChange = (newPage) => {\n//     setPage(newPage);\n//   };\n\n//   return (\n//     <MainLayout>\n//       <SidebarWithSearch />\n//       {isAuthenticated && !isLoading && !error && works.myWorks && (\n//   works.myWorks.map((work) => (\n//     <div key={work._id}>\n//       <UserCards\n//         author={work.author}\n//         description={work.description}\n//         title={work.title}\n//         img={work.img}\n//         location={work.location}\n//         pubDate={work.pubDate}\n//         _id={work._id}\n//       />\n//     </div>\n//         ))\n//       )}\n//       <DefaultPagination\n//         onPageChange={onPageChange}\n//         currentPage={page}\n//         totalPage={totalPages}\n//       />\n//     </MainLayout>\n//   );\n// };\n\n// export default MyWorks;\nimport React, { useState, useEffect } from \"react\";\nimport { MainLayout } from \"../layout/MainLayout\";\nimport { DefaultPagination } from \"../components/pagination/Pagination\";\nimport sessionData from \"../helper/session\";\nimport { UserCards } from \"../components/card/UserCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchMyWorks, selectMyWorks } from \"../redux/WorkCardSlice\";\nimport useSession from \"../hooks/useSession\";\nimport { SidebarWithSearch } from \"../components/sidebar/SideBar\";\nimport { CustomSpinner } from \"../components/loading/Loader\";\nimport { ErrorAlert } from \"../components/error/Error\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyWorks = () => {\n  _s();\n  const isAuthenticated = useSession();\n  const dispatch = useDispatch();\n  const myWorks = useSelector(selectMyWorks);\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    dispatch(fetchMyWorks({\n      userId: sessionData._id,\n      page\n    }));\n  }, [dispatch, page]);\n  const onPageChange = newPage => {\n    setPage(newPage);\n  };\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: [/*#__PURE__*/_jsxDEV(SidebarWithSearch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [myWorks.loading && /*#__PURE__*/_jsxDEV(CustomSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 31\n      }, this), myWorks.error && /*#__PURE__*/_jsxDEV(ErrorAlert, {\n        message: myWorks.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }, this), myWorks.works.length > 0 && myWorks.works.map(work => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(UserCards, {\n          author: work.author,\n          description: work.description,\n          title: work.title,\n          img: work.img,\n          location: work.location,\n          pubDate: work.pubDate,\n          _id: work._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)\n      }, work._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(DefaultPagination, {\n        onPageChange: onPageChange,\n        currentPage: page,\n        totalPage: myWorks.totalPages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(MyWorks, \"keDJXSwb3sr3R3vxDgtgY/3BAlA=\", false, function () {\n  return [useSession, useDispatch, useSelector];\n});\n_c = MyWorks;\nexport default MyWorks;\nvar _c;\n$RefreshReg$(_c, \"MyWorks\");","map":{"version":3,"names":["React","useState","useEffect","MainLayout","DefaultPagination","sessionData","UserCards","useSelector","useDispatch","fetchMyWorks","selectMyWorks","useSession","SidebarWithSearch","CustomSpinner","ErrorAlert","jsxDEV","_jsxDEV","Fragment","_Fragment","MyWorks","_s","isAuthenticated","dispatch","myWorks","page","setPage","userId","_id","onPageChange","newPage","children","fileName","_jsxFileName","lineNumber","columnNumber","loading","error","message","works","length","map","work","author","description","title","img","location","pubDate","currentPage","totalPage","totalPages","_c","$RefreshReg$"],"sources":["C:/Users/andre/OneDrive/Desktop/web developer/epicode/esercizi/capstone_Andrea_Frabotta/view/src/pages/MyWorks.jsx"],"sourcesContent":["// import React,{useState,useEffect} from \"react\";\r\n// import { MainLayout } from \"../layout/MainLayout\";\r\n// import { DefaultPagination } from \"../components/pagination/Pagination\";\r\n// import sessionData from \"../helper/session\";\r\n// import { UserCards } from \"../components/card/UserCard\";\r\n// import { isWorkLoading,worksError } from \"../redux/WorkCardSlice\";\r\n// import { useSelector } from \"react-redux\";\r\n// import useSession from \"../hooks/useSession\";\r\n// import { SidebarWithSearch } from \"../components/sidebar/SideBar\";\r\n// import { CustomSpinner } from \"../components/loading/Loader\";\r\n// import { ErrorAlert } from \"../components/error/Error\";\r\n\r\n// const MyWorks = () => {\r\n//   const isAuthenticated = useSession();\r\n//   const isLoading = useSelector(isWorkLoading);\r\n//   const error = useSelector(worksError);\r\n\r\n\r\n//   const [page, setPage] = useState(1);\r\n//   const [works, setWorks] = useState([]);\r\n//   const [totalPages, setTotalPages] = useState(0);\r\n\r\n\r\n\r\n//   const getMyWorks = async (e) => {\r\n//       try {\r\n//       const response = await fetch(\r\n//         `${process.env.REACT_APP_SERVER_BASE_URL}/${sessionData.role}/${sessionData._id}/myWorks?page=${page}`,\r\n//         {\r\n//           method: \"GET\",\r\n//           headers: {\r\n//             \"Content-type\": \"application/json\",\r\n//             authorization: sessionData,\r\n//           },\r\n//         }\r\n//       );\r\n//       const data = await response.json();\r\n//       setWorks(data.payload);\r\n//       setTotalPages(data.totalPages);\r\n//       console.log(data.payload.myWorks)\r\n//     } catch (error) {\r\n//       alert(\"Error fetching works:\", error);\r\n//     }\r\n//   };\r\n//   useEffect(() => {\r\n//     getMyWorks();\r\n//     window.scrollTo(0, 0);\r\n//   }, [page]);\r\n//   const onPageChange = (newPage) => {\r\n//     setPage(newPage);\r\n//   };\r\n  \r\n//   return (\r\n//     <MainLayout>\r\n//       <SidebarWithSearch />\r\n//       {isAuthenticated && !isLoading && !error && works.myWorks && (\r\n//   works.myWorks.map((work) => (\r\n//     <div key={work._id}>\r\n//       <UserCards\r\n//         author={work.author}\r\n//         description={work.description}\r\n//         title={work.title}\r\n//         img={work.img}\r\n//         location={work.location}\r\n//         pubDate={work.pubDate}\r\n//         _id={work._id}\r\n//       />\r\n//     </div>\r\n//         ))\r\n//       )}\r\n//       <DefaultPagination\r\n//         onPageChange={onPageChange}\r\n//         currentPage={page}\r\n//         totalPage={totalPages}\r\n//       />\r\n//     </MainLayout>\r\n//   );\r\n// };\r\n\r\n// export default MyWorks;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { MainLayout } from \"../layout/MainLayout\";\r\nimport { DefaultPagination } from \"../components/pagination/Pagination\";\r\nimport sessionData from \"../helper/session\";\r\nimport { UserCards } from \"../components/card/UserCard\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchMyWorks, selectMyWorks } from \"../redux/WorkCardSlice\";\r\nimport useSession from \"../hooks/useSession\";\r\nimport { SidebarWithSearch } from \"../components/sidebar/SideBar\";\r\nimport { CustomSpinner } from \"../components/loading/Loader\";\r\nimport { ErrorAlert } from \"../components/error/Error\";\r\n\r\nconst MyWorks = () => {\r\n  const isAuthenticated = useSession();\r\n  const dispatch = useDispatch();\r\n  const myWorks = useSelector(selectMyWorks);\r\n\r\n  const [page, setPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMyWorks({ userId: sessionData._id, page }));\r\n  }, [dispatch, page]);\r\n\r\n  const onPageChange = (newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <MainLayout>\r\n      <SidebarWithSearch />\r\n      {isAuthenticated && (\r\n        <>\r\n          {myWorks.loading && <CustomSpinner />}\r\n          {myWorks.error && <ErrorAlert message={myWorks.error} />}\r\n          {myWorks.works.length > 0 &&\r\n            myWorks.works.map((work) => (\r\n              <div key={work._id}>\r\n                <UserCards\r\n                  author={work.author}\r\n                  description={work.description}\r\n                  title={work.title}\r\n                  img={work.img}\r\n                  location={work.location}\r\n                  pubDate={work.pubDate}\r\n                  _id={work._id}\r\n                />\r\n              </div>\r\n            ))}\r\n          <DefaultPagination\r\n            onPageChange={onPageChange}\r\n            currentPage={page}\r\n            totalPage={myWorks.totalPages}\r\n          />\r\n        </>\r\n      )}\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport default MyWorks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}