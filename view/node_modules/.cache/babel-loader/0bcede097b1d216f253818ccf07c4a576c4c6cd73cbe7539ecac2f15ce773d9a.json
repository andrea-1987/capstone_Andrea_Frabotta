{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\OneDrive\\\\Desktop\\\\web developer\\\\epicode\\\\esercizi\\\\capstone_Andrea_Frabotta\\\\view\\\\src\\\\components\\\\workContent\\\\WorksContent.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { CustomSpinner } from \"../loading/Loader\";\n// import { ErrorAlert } from \"../error/Error\";\n// import { UserCards } from \"../card/UserCard\";\n// import { getAllWorks, allWorks, isWorkLoading, worksError } from \"../../redux/WorkCardSlice\";\n// import styles from \"./workContent.module.css\"\n// import { DefaultPagination } from \"../pagination/Pagination\";\n\n// export const WorksContent = () => {\n//   const dispatch = useDispatch();\n//   const works = useSelector(allWorks);\n//   const isLoading = useSelector(isWorkLoading);\n//   const error = useSelector(worksError);\n\n//   useEffect(() => {\n//     dispatch(getAllWorks());\n//   }, [dispatch]);\n// console.log(works.payload)\n//   return (\n//       <div className={`${styles.content}`}>\n//         {isLoading && <CustomSpinner />}\n//         {!isLoading && error && <ErrorAlert message=\"Ops! qualcosa è andato storto\" />}\n//         {!isLoading && !error && (\n//           works.payload && works.payload.map((work) => (\n//             <div key={work._id}>\n//               <UserCards className={`${styles.card} size-24`}\n//                 author={work.author}\n//                 description={work.description}\n//                 title={work.title}\n//                 img={work.img}\n//                 location={work.location}\n//                 pubDate={work.pubDate}\n//               />\n//             </div>\n//           ))\n//         )}\n\n//        <DefaultPagination className={`${styles.pagination}`}\n//        currentPage={works.currentPage}\n//        totalPage={works.totalPage}\n//        />\n//       </div>\n//   );\n// };\n// Nel tuo componente WorksContent.jsx\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CustomSpinner } from \"../loading/Loader\";\nimport { ErrorAlert } from \"../error/Error\";\nimport { UserCards } from \"../card/UserCard\";\nimport { getAllWorks, allWorks, isWorkLoading, worksError } from \"../../redux/WorkCardSlice\";\nimport { DefaultPagination } from \"../pagination/Pagination\";\nimport styles from \"./workContent.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const WorksContent = () => {\n  _s();\n  const dispatch = useDispatch();\n  const works = useSelector(allWorks);\n  const isLoading = useSelector(isWorkLoading);\n  const error = useSelector(worksError);\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {\n    dispatch(getAllWorks({\n      page: currentPage\n    })); // Ottieni i lavori della pagina corrente\n  }, [dispatch, currentPage]);\n  const handlePageChange = page => {\n    setCurrentPage(page); // Aggiorna la pagina corrente\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.content}`,\n    children: [isLoading && /*#__PURE__*/_jsxDEV(CustomSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      message: \"Ops! qualcosa \\xE8 andato storto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 31\n    }, this), !isLoading && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [works.payload.map(work => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(UserCards, {\n          className: `${styles.card} size-24`,\n          author: work.author,\n          description: work.description,\n          title: work.title,\n          img: work.img,\n          location: work.location,\n          pubDate: work.pubDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)\n      }, work._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(DefaultPagination, {\n        currentPage: currentPage,\n        totalPage: works.totalPages,\n        onPageChange: handlePageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(WorksContent, \"SfXCLnpKKp/WHAaKahlrDKlVw8s=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = WorksContent;\nvar _c;\n$RefreshReg$(_c, \"WorksContent\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","CustomSpinner","ErrorAlert","UserCards","getAllWorks","allWorks","isWorkLoading","worksError","DefaultPagination","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","WorksContent","_s","dispatch","works","isLoading","error","currentPage","setCurrentPage","page","handlePageChange","className","content","children","fileName","_jsxFileName","lineNumber","columnNumber","message","payload","map","work","card","author","description","title","img","location","pubDate","_id","totalPage","totalPages","onPageChange","_c","$RefreshReg$"],"sources":["C:/Users/andre/OneDrive/Desktop/web developer/epicode/esercizi/capstone_Andrea_Frabotta/view/src/components/workContent/WorksContent.jsx"],"sourcesContent":["// import React, { useEffect } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { CustomSpinner } from \"../loading/Loader\";\r\n// import { ErrorAlert } from \"../error/Error\";\r\n// import { UserCards } from \"../card/UserCard\";\r\n// import { getAllWorks, allWorks, isWorkLoading, worksError } from \"../../redux/WorkCardSlice\";\r\n// import styles from \"./workContent.module.css\"\r\n// import { DefaultPagination } from \"../pagination/Pagination\";\r\n\r\n// export const WorksContent = () => {\r\n//   const dispatch = useDispatch();\r\n//   const works = useSelector(allWorks);\r\n//   const isLoading = useSelector(isWorkLoading);\r\n//   const error = useSelector(worksError);\r\n\r\n//   useEffect(() => {\r\n//     dispatch(getAllWorks());\r\n//   }, [dispatch]);\r\n// console.log(works.payload)\r\n//   return (\r\n//       <div className={`${styles.content}`}>\r\n//         {isLoading && <CustomSpinner />}\r\n//         {!isLoading && error && <ErrorAlert message=\"Ops! qualcosa è andato storto\" />}\r\n//         {!isLoading && !error && (\r\n//           works.payload && works.payload.map((work) => (\r\n//             <div key={work._id}>\r\n//               <UserCards className={`${styles.card} size-24`}\r\n//                 author={work.author}\r\n//                 description={work.description}\r\n//                 title={work.title}\r\n//                 img={work.img}\r\n//                 location={work.location}\r\n//                 pubDate={work.pubDate}\r\n//               />\r\n//             </div>\r\n//           ))\r\n//         )}\r\n\r\n      \r\n//        <DefaultPagination className={`${styles.pagination}`}\r\n//        currentPage={works.currentPage}\r\n//        totalPage={works.totalPage}\r\n//        />\r\n//       </div>\r\n//   );\r\n// };\r\n// Nel tuo componente WorksContent.jsx\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CustomSpinner } from \"../loading/Loader\";\r\nimport { ErrorAlert } from \"../error/Error\";\r\nimport { UserCards } from \"../card/UserCard\";\r\nimport { getAllWorks, allWorks, isWorkLoading, worksError } from \"../../redux/WorkCardSlice\";\r\nimport { DefaultPagination } from \"../pagination/Pagination\";\r\nimport styles from \"./workContent.module.css\";\r\n\r\nexport const WorksContent = () => {\r\n  const dispatch = useDispatch();\r\n  const works = useSelector(allWorks);\r\n  const isLoading = useSelector(isWorkLoading);\r\n  const error = useSelector(worksError);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllWorks({ page: currentPage })); // Ottieni i lavori della pagina corrente\r\n  }, [dispatch, currentPage]);\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page); // Aggiorna la pagina corrente\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.content}`}>\r\n      {isLoading && <CustomSpinner />}\r\n      {!isLoading && error && <ErrorAlert message=\"Ops! qualcosa è andato storto\" />}\r\n      {!isLoading && !error && (\r\n        <>\r\n          {works.payload.map((work) => (\r\n            <div key={work._id}>\r\n              <UserCards\r\n                className={`${styles.card} size-24`}\r\n                author={work.author}\r\n                description={work.description}\r\n                title={work.title}\r\n                img={work.img}\r\n                location={work.location}\r\n                pubDate={work.pubDate}\r\n              />\r\n            </div>\r\n          ))}\r\n          {/* Passa la funzione di callback per il cambio pagina al componente di paginazione */}\r\n          <DefaultPagination currentPage={currentPage} totalPage={works.totalPages} onPageChange={handlePageChange} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}