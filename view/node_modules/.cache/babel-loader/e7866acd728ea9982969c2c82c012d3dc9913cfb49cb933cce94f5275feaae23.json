{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\OneDrive\\\\Desktop\\\\web developer\\\\epicode\\\\esercizi\\\\capstone_Andrea_Frabotta\\\\view\\\\src\\\\components\\\\pagination\\\\Pagination.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { Button, IconButton } from \"@material-tailwind/react\";\n// import { ArrowRightIcon, ArrowLeftIcon } from \"@heroicons/react/24/outline\";\n\n// export function DefaultPagination({currentPage,totalPage}) {\n//   const [active, setActive] = React.useState(1);\n\n//     const getItemProps = (index) =>\n//     ({\n//       variant: active === index ? \"filled\" : \"text\",\n//       color: \"gray\",\n//       onClick: () => setActive(index),\n//     } );\n\n//   const next = () => {\n//     if (active === totalPage) return;\n\n//     setActive(active + 1);\n//   };\n\n//   const prev = () => {\n//     if (active === 1) return;\n\n//     setActive(active - 1);\n//   };\n\n//   return (\n//     <div className=\"flex items-center gap-4\">\n\n//       <Button\n//         variant=\"text\"\n//         className=\"flex items-center gap-2\"\n//         onClick={prev}\n//         disabled={active === 1}\n//       >\n//         <ArrowLeftIcon strokeWidth={2} className=\"h-4 w-4\" /> Previous\n//       </Button>\n//      <div  className=\"flex items-center gap-2\">\n//         <IconButton {...getItemProps({currentPage})}>{currentPage}</IconButton>\n\n//       </div>\n//       <Button\n//         variant=\"text\"\n//         className=\"flex items-center gap-2\"\n//         onClick={next}\n//         disabled={active === totalPage}\n//       >\n//         Next\n//         <ArrowRightIcon strokeWidth={2} className=\"h-4 w-4\" />\n//       </Button>\n//     </div>\n//   );\n// }\n// Nel tuo componente di paginazione (DefaultPagination.jsx)\n\nimport React, { useState } from \"react\";\nimport { Button, IconButton } from \"@material-tailwind/react\";\nimport { ArrowRightIcon, ArrowLeftIcon } from \"@heroicons/react/24/outline\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function DefaultPagination({\n  currentPage,\n  totalPage\n}) {\n  _s();\n  const [page, setPage] = useState(1);\n  const prev = () => {\n    setPage(prev => prev - 1);\n  };\n  const next = () => {\n    setPage(prev => prev + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center gap-4\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"text\",\n      className: \"flex items-center gap-2\",\n      onClick: prev,\n      disabled: currentPage === 1,\n      children: [/*#__PURE__*/_jsxDEV(ArrowLeftIcon, {\n        strokeWidth: 2,\n        className: \"h-4 w-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), \" Previous\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-2\",\n      children: Array.from({\n        length: totalPage\n      }, (_, index) => /*#__PURE__*/_jsxDEV(IconButton, {\n        variant: currentPage === index + 1 ? \"filled\" : \"text\",\n        color: \"gray\",\n        onClick: () => onPageChange(index + 1),\n        children: index + 1\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"text\",\n      className: \"flex items-center gap-2\",\n      onClick: next,\n      disabled: currentPage === totalPage,\n      children: [\"Next \", /*#__PURE__*/_jsxDEV(ArrowRightIcon, {\n        strokeWidth: 2,\n        className: \"h-4 w-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(DefaultPagination, \"/aYw50Hw6ayPOtQIABdy4Jo1JmU=\");\n_c = DefaultPagination;\nvar _c;\n$RefreshReg$(_c, \"DefaultPagination\");","map":{"version":3,"names":["React","useState","Button","IconButton","ArrowRightIcon","ArrowLeftIcon","jsxDEV","_jsxDEV","DefaultPagination","currentPage","totalPage","_s","page","setPage","prev","next","className","children","variant","onClick","disabled","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","_","index","color","onPageChange","_c","$RefreshReg$"],"sources":["C:/Users/andre/OneDrive/Desktop/web developer/epicode/esercizi/capstone_Andrea_Frabotta/view/src/components/pagination/Pagination.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import { Button, IconButton } from \"@material-tailwind/react\";\r\n// import { ArrowRightIcon, ArrowLeftIcon } from \"@heroicons/react/24/outline\";\r\n \r\n// export function DefaultPagination({currentPage,totalPage}) {\r\n//   const [active, setActive] = React.useState(1);\r\n \r\n//     const getItemProps = (index) =>\r\n//     ({\r\n//       variant: active === index ? \"filled\" : \"text\",\r\n//       color: \"gray\",\r\n//       onClick: () => setActive(index),\r\n//     } );\r\n \r\n//   const next = () => {\r\n//     if (active === totalPage) return;\r\n \r\n//     setActive(active + 1);\r\n//   };\r\n \r\n//   const prev = () => {\r\n//     if (active === 1) return;\r\n \r\n//     setActive(active - 1);\r\n//   };\r\n \r\n//   return (\r\n//     <div className=\"flex items-center gap-4\">\r\n      \r\n//       <Button\r\n//         variant=\"text\"\r\n//         className=\"flex items-center gap-2\"\r\n//         onClick={prev}\r\n//         disabled={active === 1}\r\n//       >\r\n//         <ArrowLeftIcon strokeWidth={2} className=\"h-4 w-4\" /> Previous\r\n//       </Button>\r\n//      <div  className=\"flex items-center gap-2\">\r\n//         <IconButton {...getItemProps({currentPage})}>{currentPage}</IconButton>\r\n    \r\n//       </div>\r\n//       <Button\r\n//         variant=\"text\"\r\n//         className=\"flex items-center gap-2\"\r\n//         onClick={next}\r\n//         disabled={active === totalPage}\r\n//       >\r\n//         Next\r\n//         <ArrowRightIcon strokeWidth={2} className=\"h-4 w-4\" />\r\n//       </Button>\r\n//     </div>\r\n//   );\r\n// }\r\n// Nel tuo componente di paginazione (DefaultPagination.jsx)\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Button, IconButton } from \"@material-tailwind/react\";\r\nimport { ArrowRightIcon, ArrowLeftIcon } from \"@heroicons/react/24/outline\";\r\n\r\nexport function DefaultPagination({ currentPage, totalPage }) {\r\n  const [page,setPage]=useState(1)\r\n\r\n  const prev = () => {\r\n  setPage(prev=>prev-1)\r\n  };\r\n\r\n  const next = () => {\r\n    setPage(prev=>prev+1)\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <Button\r\n        variant=\"text\"\r\n        className=\"flex items-center gap-2\"\r\n        onClick={prev}\r\n        disabled={currentPage === 1}\r\n      >\r\n        <ArrowLeftIcon strokeWidth={2} className=\"h-4 w-4\" /> Previous\r\n      </Button>\r\n      <div className=\"flex items-center gap-2\">\r\n        {Array.from({ length: totalPage }, (_, index) => (\r\n          <IconButton\r\n            key={index + 1}\r\n            variant={currentPage === index + 1 ? \"filled\" : \"text\"}\r\n            color=\"gray\"\r\n            onClick={() => onPageChange(index + 1)}\r\n          >\r\n            {index + 1}\r\n          </IconButton>\r\n        ))}\r\n      </div>\r\n      <Button\r\n        variant=\"text\"\r\n        className=\"flex items-center gap-2\"\r\n        onClick={next}\r\n        disabled={currentPage === totalPage}\r\n      >\r\n        Next <ArrowRightIcon strokeWidth={2} className=\"h-4 w-4\" />\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}