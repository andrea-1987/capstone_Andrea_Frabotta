{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\OneDrive\\\\Desktop\\\\web developer\\\\epicode\\\\esercizi\\\\capstone_Andrea_Frabotta\\\\view\\\\src\\\\components\\\\workContent\\\\WorksContent.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { CustomSpinner } from \"../loading/Loader\";\n// import { ErrorAlert } from \"../error/Error\";\n// import { UserCards } from \"../card/UserCard\";\n// import { getAllWorks, allWorks, isWorkLoading, worksError } from \"../../redux/WorkCardSlice\";\n// import styles from \"./workContent.module.css\";\n// import { DefaultPagination } from \"../pagination/Pagination\";\n\n// export const WorksContent = () => {\n//    const dispatch = useDispatch();\n//   const isLoading = useSelector(isWorkLoading);\n//   const error = useSelector(worksError);\n//   const [page, setPage] = useState(1);\n//   const [works, setWorks] = useState([]);\n//   const [totalPages, setTotalPages] = useState(0);\n//   const [filters, setFilters] = useState({ job: \"\", location: \"\" });\n\n//   const getAllWorks = async () => {\n//     try {\n//       const response = await fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/works?page=${page}`);\n//       const data = await response.json();\n//       setWorks(data.payload); \n//       setTotalPages(data.totalPages); \n//     } catch (error) {\n//       alert(\"Error fetching works:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     getAllWorks();\n//     window.scrollTo(0, 0);\n//   }, [page]);\n\n//   const onPageChange = (newPage) => {\n//     setPage(newPage);\n//   };\n\n//   return (\n//     <div className={`${styles.content}`}>\n//       {isLoading && <CustomSpinner />}\n//       {!isLoading && error && <ErrorAlert message=\"Ops! Qualcosa è andato storto\" />}\n//       {!isLoading && !error && (\n//         works.map((work) => (\n//           <div key={work._id}>\n//             <UserCards\n//               className={`${styles.card}`}\n//               author={work.author}\n//               description={work.description}\n//               title={work.title}\n//               img={work.img}\n//               location={work.location}\n//               pubDate={work.pubDate}\n//               _id={work._id}\n//             />\n//           </div>\n//         ))\n//       )}\n\n//       <DefaultPagination\n//         onPageChange={onPageChange}\n//         currentPage={page}\n//         totalPage={totalPages} \n//       />\n//     </div>\n//   );\n// };\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CustomSpinner } from \"../loading/Loader\";\nimport { ErrorAlert } from \"../error/Error\";\nimport { UserCards } from \"../card/UserCard\";\nimport { isWorkLoading, selectTotalPage, worksError } from \"../../redux/WorkCardSlice\";\nimport styles from \"./workContent.module.css\";\nimport { DefaultPagination } from \"../pagination/Pagination\";\nimport { setFiltered } from \"../../redux/FilterSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WorksContent = () => {\n  _s();\n  const dispatch = useDispatch();\n  const isLoading = useSelector(isWorkLoading);\n  const error = useSelector(worksError);\n  const filtered = useSelector(setFiltered);\n  const [works, setWorks] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [page, setPage] = useState(1);\n  const getAllWorks = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/works?page=${page}`);\n      const data = await response.json();\n      setWorks(data.payload);\n      setTotalPages(data.totalPages);\n    } catch (error) {\n      alert(\"Error fetching works:\", error);\n    }\n  };\n  useEffect(() => {\n    getAllWorks();\n    dispatch({\n      page,\n      filters\n    });\n    window.scrollTo(0, 0);\n  }, [dispatch, page, filters]);\n  const onPageChange = newPage => {\n    setPage(newPage);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.content}`,\n    children: [isLoading && /*#__PURE__*/_jsxDEV(CustomSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      message: \"Ops! Qualcosa \\xE8 andato storto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 31\n    }, this), !isLoading && !error && works.map(work => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(UserCards, {\n        className: `${styles.card}`,\n        author: work.author,\n        description: work.description,\n        title: work.title,\n        img: work.img,\n        location: work.location,\n        pubDate: work.pubDate,\n        _id: work._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)\n    }, work._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(DefaultPagination, {\n      onPageChange: onPageChange,\n      currentPage: page,\n      totalPage: totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(WorksContent, \"OjK7oTnqufXiIT+CT69PePY+5O0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = WorksContent;\nvar _c;\n$RefreshReg$(_c, \"WorksContent\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","CustomSpinner","ErrorAlert","UserCards","isWorkLoading","selectTotalPage","worksError","styles","DefaultPagination","setFiltered","jsxDEV","_jsxDEV","WorksContent","_s","dispatch","isLoading","error","filtered","works","setWorks","totalPages","setTotalPages","page","setPage","getAllWorks","response","fetch","process","env","REACT_APP_SERVER_BASE_URL","data","json","payload","alert","filters","window","scrollTo","onPageChange","newPage","className","content","children","fileName","_jsxFileName","lineNumber","columnNumber","message","map","work","card","author","description","title","img","location","pubDate","_id","currentPage","totalPage","_c","$RefreshReg$"],"sources":["C:/Users/andre/OneDrive/Desktop/web developer/epicode/esercizi/capstone_Andrea_Frabotta/view/src/components/workContent/WorksContent.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { CustomSpinner } from \"../loading/Loader\";\r\n// import { ErrorAlert } from \"../error/Error\";\r\n// import { UserCards } from \"../card/UserCard\";\r\n// import { getAllWorks, allWorks, isWorkLoading, worksError } from \"../../redux/WorkCardSlice\";\r\n// import styles from \"./workContent.module.css\";\r\n// import { DefaultPagination } from \"../pagination/Pagination\";\r\n\r\n// export const WorksContent = () => {\r\n//    const dispatch = useDispatch();\r\n//   const isLoading = useSelector(isWorkLoading);\r\n//   const error = useSelector(worksError);\r\n//   const [page, setPage] = useState(1);\r\n//   const [works, setWorks] = useState([]);\r\n//   const [totalPages, setTotalPages] = useState(0);\r\n//   const [filters, setFilters] = useState({ job: \"\", location: \"\" });\r\n\r\n//   const getAllWorks = async () => {\r\n//     try {\r\n//       const response = await fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/works?page=${page}`);\r\n//       const data = await response.json();\r\n//       setWorks(data.payload); \r\n//       setTotalPages(data.totalPages); \r\n//     } catch (error) {\r\n//       alert(\"Error fetching works:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     getAllWorks();\r\n//     window.scrollTo(0, 0);\r\n//   }, [page]);\r\n\r\n//   const onPageChange = (newPage) => {\r\n//     setPage(newPage);\r\n//   };\r\n\r\n//   return (\r\n//     <div className={`${styles.content}`}>\r\n//       {isLoading && <CustomSpinner />}\r\n//       {!isLoading && error && <ErrorAlert message=\"Ops! Qualcosa è andato storto\" />}\r\n//       {!isLoading && !error && (\r\n//         works.map((work) => (\r\n//           <div key={work._id}>\r\n//             <UserCards\r\n//               className={`${styles.card}`}\r\n//               author={work.author}\r\n//               description={work.description}\r\n//               title={work.title}\r\n//               img={work.img}\r\n//               location={work.location}\r\n//               pubDate={work.pubDate}\r\n//               _id={work._id}\r\n//             />\r\n//           </div>\r\n//         ))\r\n//       )}\r\n\r\n//       <DefaultPagination\r\n//         onPageChange={onPageChange}\r\n//         currentPage={page}\r\n//         totalPage={totalPages} \r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CustomSpinner } from \"../loading/Loader\";\r\nimport { ErrorAlert } from \"../error/Error\";\r\nimport { UserCards } from \"../card/UserCard\";\r\nimport {isWorkLoading,selectTotalPage,worksError } from \"../../redux/WorkCardSlice\";\r\nimport styles from \"./workContent.module.css\";\r\nimport { DefaultPagination } from \"../pagination/Pagination\";\r\nimport { setFiltered } from \"../../redux/FilterSlice\";\r\n\r\nexport const WorksContent = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(isWorkLoading);\r\n  const error = useSelector(worksError);\r\n  const filtered= useSelector(setFiltered)\r\n  const [works,setWorks]=useState([]);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n\r\n    \r\n\r\n   const getAllWorks = async () => {\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/works?page=${page}`);\r\n      const data = await response.json();\r\n      setWorks(data.payload); \r\n      setTotalPages(data.totalPages); \r\n    } catch (error) {\r\n      alert(\"Error fetching works:\", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n\r\n   getAllWorks()\r\n    dispatch(({ page, filters }));\r\n    window.scrollTo(0, 0);\r\n  }, [dispatch, page, filters]);\r\n\r\n  const onPageChange = (newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.content}`}>\r\n      {isLoading && <CustomSpinner />}\r\n      {!isLoading && error && <ErrorAlert message=\"Ops! Qualcosa è andato storto\" />}\r\n      {!isLoading && !error && (\r\n        works.map((work) => (\r\n          <div key={work._id}>\r\n            <UserCards\r\n              className={`${styles.card}`}\r\n              author={work.author}\r\n              description={work.description}\r\n              title={work.title}\r\n              img={work.img}\r\n              location={work.location}\r\n              pubDate={work.pubDate}\r\n              _id={work._id}\r\n            />\r\n          </div>\r\n        ))\r\n      )}\r\n\r\n      <DefaultPagination\r\n        onPageChange={onPageChange}\r\n        currentPage={page}\r\n        totalPage={totalPages} \r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}