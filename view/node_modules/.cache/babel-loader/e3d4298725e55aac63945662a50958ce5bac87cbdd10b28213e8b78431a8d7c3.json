{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\OneDrive\\\\Desktop\\\\web developer\\\\epicode\\\\esercizi\\\\capstone_Andrea_Frabotta\\\\view\\\\src\\\\components\\\\workContent\\\\WorksContent.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { CustomSpinner } from \"../loading/Loader\";\n// import { ErrorAlert } from \"../error/Error\";\n// import { UserCards } from \"../card/UserCard\";\n// import { getAllWorks, allWorks, isWorkLoading, worksError } from \"../../redux/WorkCardSlice\";\n// import styles from \"./workContent.module.css\";\n// import { DefaultPagination } from \"../pagination/Pagination\";\n\n// export const WorksContent = () => {\n//   const dispatch = useDispatch();\n//   const isLoading = useSelector(isWorkLoading);\n//   const error = useSelector(worksError);\n//   const [page, setPage] = useState(1);\n//   const [works, setWorks] = useState([]);\n//   const [totalPages, setTotalPages] = useState(0); // Aggiungi stato per il numero totale di pagine\n\n//   const getWorks = async () => {\n//     try {\n//       const response = await fetch(`http://localhost:4040/works?page=${page}`);\n//       const data = await response.json();\n//       setWorks(data.payload); // Imposta solo i dati dei lavori, non l'intera risposta\n//       setTotalPages(data.totalPages); // Imposta il numero totale di pagine\n//     } catch (error) {\n//       console.error(\"Error fetching works:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     getWorks();\n//   }, [page]);\n\n//   const onPageChange = (newPage) => {\n//     setPage(newPage);\n//   };\n\n//   return (\n//     <div className={styles.content}>\n//       {isLoading && <CustomSpinner />}\n//       {!isLoading && error && <ErrorAlert message=\"Ops! Qualcosa è andato storto\" />}\n//       {!isLoading && !error && (\n//         works.map((work) => (\n//           <div key={work._id}>\n//             <UserCards\n//               className={`${styles.card} size-24`}\n//               author={work.author}\n//               description={work.description}\n//               title={work.title}\n//               img={work.img}\n//               location={work.location}\n//               pubDate={work.pubDate}\n//             />\n//           </div>\n//         ))\n//       )}\n\n//       <DefaultPagination\n//         className={styles.pagination}\n//         onPageChange={onPageChange}\n//         currentPage={page}\n//         totalPage={totalPages} \n//       />\n//     </div>\n//   );\n// };\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CustomSpinner } from \"../loading/Loader\";\nimport { ErrorAlert } from \"../error/Error\";\nimport { UserCards } from \"../card/UserCard\";\nimport { getAllWorks, allWorks, isWorkLoading, worksError, selectTotalWorks, selectPageSize } from \"../../redux/WorkCardSlice\";\nimport { DefaultPagination } from \"../pagination/Pagination\";\nimport styles from \"./workContent.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WorksContent = () => {\n  _s();\n  const dispatch = useDispatch();\n  const isLoading = useSelector(isWorkLoading);\n  const error = useSelector(worksError);\n  const works = useSelector(allWorks);\n  const totalWorks = useSelector(selectTotalWorks);\n  const pageSize = useSelector(selectPageSize);\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    dispatch(getAllWorks(page));\n  }, [dispatch, page]);\n  const onPageChange = newPage => {\n    setPage(newPage);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.content,\n    children: [isLoading && /*#__PURE__*/_jsxDEV(CustomSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      message: \"Ops! Qualcosa \\xE8 andato storto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 31\n    }, this), !isLoading && !error && works.payload && works.payload.map(work => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(UserCards, {\n        className: `${styles.card} size-24`,\n        author: work.author,\n        description: work.description,\n        title: work.title,\n        img: work.img,\n        location: work.location,\n        pubDate: work.pubDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)\n    }, work._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(DefaultPagination, {\n      className: styles.pagination,\n      onPageChange: onPageChange,\n      currentPage: page,\n      totalPage: works.payload.totalPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(WorksContent, \"DE4mdIjNQaAgnFzW996qc82g0k8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = WorksContent;\nvar _c;\n$RefreshReg$(_c, \"WorksContent\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","CustomSpinner","ErrorAlert","UserCards","getAllWorks","allWorks","isWorkLoading","worksError","selectTotalWorks","selectPageSize","DefaultPagination","styles","jsxDEV","_jsxDEV","WorksContent","_s","dispatch","isLoading","error","works","totalWorks","pageSize","page","setPage","onPageChange","newPage","className","content","children","fileName","_jsxFileName","lineNumber","columnNumber","message","payload","map","work","card","author","description","title","img","location","pubDate","_id","pagination","currentPage","totalPage","_c","$RefreshReg$"],"sources":["C:/Users/andre/OneDrive/Desktop/web developer/epicode/esercizi/capstone_Andrea_Frabotta/view/src/components/workContent/WorksContent.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { CustomSpinner } from \"../loading/Loader\";\r\n// import { ErrorAlert } from \"../error/Error\";\r\n// import { UserCards } from \"../card/UserCard\";\r\n// import { getAllWorks, allWorks, isWorkLoading, worksError } from \"../../redux/WorkCardSlice\";\r\n// import styles from \"./workContent.module.css\";\r\n// import { DefaultPagination } from \"../pagination/Pagination\";\r\n\r\n// export const WorksContent = () => {\r\n//   const dispatch = useDispatch();\r\n//   const isLoading = useSelector(isWorkLoading);\r\n//   const error = useSelector(worksError);\r\n//   const [page, setPage] = useState(1);\r\n//   const [works, setWorks] = useState([]);\r\n//   const [totalPages, setTotalPages] = useState(0); // Aggiungi stato per il numero totale di pagine\r\n\r\n//   const getWorks = async () => {\r\n//     try {\r\n//       const response = await fetch(`http://localhost:4040/works?page=${page}`);\r\n//       const data = await response.json();\r\n//       setWorks(data.payload); // Imposta solo i dati dei lavori, non l'intera risposta\r\n//       setTotalPages(data.totalPages); // Imposta il numero totale di pagine\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching works:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     getWorks();\r\n//   }, [page]);\r\n\r\n//   const onPageChange = (newPage) => {\r\n//     setPage(newPage);\r\n//   };\r\n\r\n//   return (\r\n//     <div className={styles.content}>\r\n//       {isLoading && <CustomSpinner />}\r\n//       {!isLoading && error && <ErrorAlert message=\"Ops! Qualcosa è andato storto\" />}\r\n//       {!isLoading && !error && (\r\n//         works.map((work) => (\r\n//           <div key={work._id}>\r\n//             <UserCards\r\n//               className={`${styles.card} size-24`}\r\n//               author={work.author}\r\n//               description={work.description}\r\n//               title={work.title}\r\n//               img={work.img}\r\n//               location={work.location}\r\n//               pubDate={work.pubDate}\r\n//             />\r\n//           </div>\r\n//         ))\r\n//       )}\r\n\r\n//       <DefaultPagination\r\n//         className={styles.pagination}\r\n//         onPageChange={onPageChange}\r\n//         currentPage={page}\r\n//         totalPage={totalPages} \r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CustomSpinner } from \"../loading/Loader\";\r\nimport { ErrorAlert } from \"../error/Error\";\r\nimport { UserCards } from \"../card/UserCard\";\r\nimport { getAllWorks, allWorks, isWorkLoading, worksError, selectTotalWorks, selectPageSize,} from \"../../redux/WorkCardSlice\";\r\nimport { DefaultPagination } from \"../pagination/Pagination\";\r\nimport styles from \"./workContent.module.css\";\r\n\r\nexport const WorksContent = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(isWorkLoading);\r\n  const error = useSelector(worksError);\r\n  const works = useSelector(allWorks);\r\n  const totalWorks = useSelector(selectTotalWorks);\r\n  const pageSize = useSelector(selectPageSize);\r\n  const [page, setPage] = useState(1);\r\n    \r\n\r\n  useEffect(() => {\r\n    dispatch(getAllWorks(page));\r\n  }, [dispatch, page]);\r\n\r\n  const onPageChange = (newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.content}>\r\n      {isLoading && <CustomSpinner />}\r\n      {!isLoading && error && <ErrorAlert message=\"Ops! Qualcosa è andato storto\" />}\r\n      {!isLoading && !error && (\r\n        works.payload &&\r\n        works.payload.map((work) => (\r\n          <div key={work._id}>\r\n            <UserCards\r\n              className={`${styles.card} size-24`}\r\n              author={work.author}\r\n              description={work.description}\r\n              title={work.title}\r\n              img={work.img}\r\n              location={work.location}\r\n              pubDate={work.pubDate}\r\n            />\r\n          </div>\r\n        ))\r\n      )}\r\n\r\n      <DefaultPagination\r\n        className={styles.pagination}\r\n        onPageChange={onPageChange}\r\n        currentPage={page}\r\n        totalPage={works.payload.totalPage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}