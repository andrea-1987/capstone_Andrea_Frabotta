{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\OneDrive\\\\Desktop\\\\web developer\\\\epicode\\\\esercizi\\\\capstone_Andrea_Frabotta\\\\view\\\\src\\\\components\\\\loginForm\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { Card, Input, Button, Typography } from \"@material-tailwind/react\";\n// import { useNavigate } from 'react-router-dom';\n// import {jwtDecode} from \"jwt-decode\";\n\n// export function LoginForm() {\n//   const [formData, setFormData] = useState({});\n//   const navigate = useNavigate();\n\n//   const onSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await fetch(\n//         `${process.env.REACT_APP_SERVER_BASE_URL}/login`,\n//         {\n//           method: \"POST\",\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//           },\n//           body: JSON.stringify(formData),\n//         }\n//       );\n\n//       if (response.ok) {\n//         const data = await response.json();\n//         if (data.token) {\n//           localStorage.setItem('auth', data.token);\n//           try {\n//             const decodedToken = jwtDecode(data.token);\n//             const role = decodedToken.role;\n//             if (role === 'user') {\n//               navigate('/user');\n//             } else if (role === 'professional') {\n//               navigate('/professional');\n//             } else {\n//               alert('Unknown role');\n//             }\n//           } catch (error) {\n//             throw new Error('Failed to parse token');\n//           }\n//         } else {\n//           throw new Error('Token not found in response data');\n//         }\n//       } else {\n//         throw new Error('HTTP request failed with status ' + response.status);\n//       }\n//     } catch (error) {\n//       alert('Failed to login: ' + error.message);\n//     }\n//   };\n\n//   const onChangeInput = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({\n//       ...formData,\n//       [name]: value\n//     });\n//   };\n\n//   return (\n//     <Card color=\"transparent\" shadow={false}>\n//       <Typography variant=\"h4\" color=\"blue-gray\">\n//         Log in\n//       </Typography>\n//       <Typography color=\"gray\" className=\"mt-1 font-normal\">\n//         Welcome back. Enter your details to log in.\n//       </Typography>\n//       <form onSubmit={onSubmit} className=\"mt-8 mb-2 w-80 max-w-screen-lg sm:w-96\">\n//         <div className=\"mb-1 flex flex-col gap-6\">\n//           <Typography variant=\"h6\" color=\"blue-gray\" className=\"-mb-3\">\n//             Your Email\n//           </Typography>\n//           <Input\n//             onChange={onChangeInput}\n//             name=\"email\"\n//             size=\"lg\"\n//             placeholder=\"name@mail.com\"\n//             className=\" !border-t-blue-gray-200 focus:!border-t-gray-900\"\n//             labelProps={{\n//               className: \"before:content-none after:content-none\",\n//             }}\n//           />\n//           <Typography variant=\"h6\" color=\"blue-gray\" className=\"-mb-3\">\n//             Password\n//           </Typography>\n//           <Input\n//             onChange={onChangeInput}\n//             name=\"password\"\n//             type=\"password\"\n//             size=\"lg\"\n//             placeholder=\"********\"\n//             className=\" !border-t-blue-gray-200 focus:!border-t-gray-900\"\n//             labelProps={{\n//               className: \"before:content-none after:content-none\",\n//             }}\n//           />\n//         </div>\n//         <Button type=\"submit\" className=\"mt-6\" fullWidth>\n//           Sign in\n//         </Button>\n//       </form>\n//     </Card>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { Card, Input, Button, Typography } from \"@material-tailwind/react\";\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from \"jwt-decode\";\nimport useSession from \"../../hooks/useSession\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LoginForm() {\n  _s();\n  const [formData, setFormData] = useState({});\n  const [openModal, setOpenModal] = useState(false);\n  const navigate = useNavigate();\n  const session = useSession();\n  const onSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.token) {\n          localStorage.setItem('auth', data.token);\n          navigateBasedOnRole(data.token);\n        } else {\n          throw new Error('Token not found in response data');\n        }\n      } else {\n        throw new Error('HTTP request failed with status ' + response.status);\n      }\n    } catch (error) {\n      alert('Failed to login: ' + error.message);\n    }\n  };\n  const onChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleOpenModal = () => {\n    setOpenModal(true);\n  };\n  const handleCloseModal = () => {\n    setOpenModal(false);\n  };\n  const navigateBasedOnRole = token => {\n    const role = session ? session.role : jwtDecode(token).role;\n    if (role === 'user') {\n      navigate('/user');\n    } else if (role === 'professional') {\n      navigate('/professional');\n    } else {\n      alert('Unknown role');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleOpenModal,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), openModal && /*#__PURE__*/_jsxDEV(Card, {\n      color: \"transparent\",\n      shadow: false,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        color: \"blue-gray\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"gray\",\n        className: \"mt-1 font-normal\",\n        children: \"Welcome back. Enter your details to log in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        className: \"mt-8 mb-2 w-80 max-w-screen-lg sm:w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1 flex flex-col gap-6\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"blue-gray\",\n            className: \"-mb-3\",\n            children: \"Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            onChange: onChangeInput,\n            name: \"email\",\n            size: \"lg\",\n            placeholder: \"name@mail.com\",\n            className: \" !border-t-blue-gray-200 focus:!border-t-gray-900\",\n            labelProps: {\n              className: \"before:content-none after:content-none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"blue-gray\",\n            className: \"-mb-3\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            onChange: onChangeInput,\n            name: \"password\",\n            type: \"password\",\n            size: \"lg\",\n            placeholder: \"********\",\n            className: \" !border-t-blue-gray-200 focus:!border-t-gray-900\",\n            labelProps: {\n              className: \"before:content-none after:content-none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"mt-6\",\n          fullWidth: true,\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseModal,\n          className: \"mt-4\",\n          fullWidth: true,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"fYuQklMIET1cPbQN/olVU5kHanE=\", false, function () {\n  return [useNavigate, useSession];\n});\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","Card","Input","Button","Typography","useNavigate","jwtDecode","useSession","jsxDEV","_jsxDEV","LoginForm","_s","formData","setFormData","openModal","setOpenModal","navigate","session","onSubmit","e","preventDefault","response","fetch","process","env","REACT_APP_SERVER_BASE_URL","method","headers","body","JSON","stringify","ok","data","json","token","localStorage","setItem","navigateBasedOnRole","Error","status","error","alert","message","onChangeInput","name","value","target","handleOpenModal","handleCloseModal","role","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","color","shadow","variant","className","onChange","size","placeholder","labelProps","type","fullWidth","_c","$RefreshReg$"],"sources":["C:/Users/andre/OneDrive/Desktop/web developer/epicode/esercizi/capstone_Andrea_Frabotta/view/src/components/loginForm/LoginForm.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { Card, Input, Button, Typography } from \"@material-tailwind/react\";\r\n// import { useNavigate } from 'react-router-dom';\r\n// import {jwtDecode} from \"jwt-decode\";\r\n\r\n// export function LoginForm() {\r\n//   const [formData, setFormData] = useState({});\r\n//   const navigate = useNavigate();\r\n\r\n//   const onSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await fetch(\r\n//         `${process.env.REACT_APP_SERVER_BASE_URL}/login`,\r\n//         {\r\n//           method: \"POST\",\r\n//           headers: {\r\n//             \"Content-Type\": \"application/json\",\r\n//           },\r\n//           body: JSON.stringify(formData),\r\n//         }\r\n//       );\r\n\r\n//       if (response.ok) {\r\n//         const data = await response.json();\r\n//         if (data.token) {\r\n//           localStorage.setItem('auth', data.token);\r\n//           try {\r\n//             const decodedToken = jwtDecode(data.token);\r\n//             const role = decodedToken.role;\r\n//             if (role === 'user') {\r\n//               navigate('/user');\r\n//             } else if (role === 'professional') {\r\n//               navigate('/professional');\r\n//             } else {\r\n//               alert('Unknown role');\r\n//             }\r\n//           } catch (error) {\r\n//             throw new Error('Failed to parse token');\r\n//           }\r\n//         } else {\r\n//           throw new Error('Token not found in response data');\r\n//         }\r\n//       } else {\r\n//         throw new Error('HTTP request failed with status ' + response.status);\r\n//       }\r\n//     } catch (error) {\r\n//       alert('Failed to login: ' + error.message);\r\n//     }\r\n//   };\r\n\r\n//   const onChangeInput = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({\r\n//       ...formData,\r\n//       [name]: value\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <Card color=\"transparent\" shadow={false}>\r\n//       <Typography variant=\"h4\" color=\"blue-gray\">\r\n//         Log in\r\n//       </Typography>\r\n//       <Typography color=\"gray\" className=\"mt-1 font-normal\">\r\n//         Welcome back. Enter your details to log in.\r\n//       </Typography>\r\n//       <form onSubmit={onSubmit} className=\"mt-8 mb-2 w-80 max-w-screen-lg sm:w-96\">\r\n//         <div className=\"mb-1 flex flex-col gap-6\">\r\n//           <Typography variant=\"h6\" color=\"blue-gray\" className=\"-mb-3\">\r\n//             Your Email\r\n//           </Typography>\r\n//           <Input\r\n//             onChange={onChangeInput}\r\n//             name=\"email\"\r\n//             size=\"lg\"\r\n//             placeholder=\"name@mail.com\"\r\n//             className=\" !border-t-blue-gray-200 focus:!border-t-gray-900\"\r\n//             labelProps={{\r\n//               className: \"before:content-none after:content-none\",\r\n//             }}\r\n//           />\r\n//           <Typography variant=\"h6\" color=\"blue-gray\" className=\"-mb-3\">\r\n//             Password\r\n//           </Typography>\r\n//           <Input\r\n//             onChange={onChangeInput}\r\n//             name=\"password\"\r\n//             type=\"password\"\r\n//             size=\"lg\"\r\n//             placeholder=\"********\"\r\n//             className=\" !border-t-blue-gray-200 focus:!border-t-gray-900\"\r\n//             labelProps={{\r\n//               className: \"before:content-none after:content-none\",\r\n//             }}\r\n//           />\r\n//         </div>\r\n//         <Button type=\"submit\" className=\"mt-6\" fullWidth>\r\n//           Sign in\r\n//         </Button>\r\n//       </form>\r\n//     </Card>\r\n//   );\r\n// }\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Card, Input, Button, Typography } from \"@material-tailwind/react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {jwtDecode} from \"jwt-decode\";\r\nimport useSession from \"../../hooks/useSession\";\r\n\r\nexport function LoginForm() {\r\n  const [formData, setFormData] = useState({});\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const navigate = useNavigate();\r\n  const session = useSession();\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_SERVER_BASE_URL}/login`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(formData),\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (data.token) {\r\n          localStorage.setItem('auth', data.token);\r\n          navigateBasedOnRole(data.token);\r\n        } else {\r\n          throw new Error('Token not found in response data');\r\n        }\r\n      } else {\r\n        throw new Error('HTTP request failed with status ' + response.status);\r\n      }\r\n    } catch (error) {\r\n      alert('Failed to login: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const onChangeInput = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleOpenModal = () => {\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const navigateBasedOnRole = (token) => {\r\n    const role = session ? session.role : jwtDecode(token).role;\r\n    if (role === 'user') {\r\n      navigate('/user');\r\n    } else if (role === 'professional') {\r\n      navigate('/professional');\r\n    } else {\r\n      alert('Unknown role');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleOpenModal}>Login</Button>\r\n      {openModal && (\r\n        <Card color=\"transparent\" shadow={false}>\r\n          <Typography variant=\"h4\" color=\"blue-gray\">\r\n            Log in\r\n          </Typography>\r\n          <Typography color=\"gray\" className=\"mt-1 font-normal\">\r\n            Welcome back. Enter your details to log in.\r\n          </Typography>\r\n          <form onSubmit={onSubmit} className=\"mt-8 mb-2 w-80 max-w-screen-lg sm:w-96\">\r\n            <div className=\"mb-1 flex flex-col gap-6\">\r\n              <Typography variant=\"h6\" color=\"blue-gray\" className=\"-mb-3\">\r\n                Your Email\r\n              </Typography>\r\n              <Input\r\n                onChange={onChangeInput}\r\n                name=\"email\"\r\n                size=\"lg\"\r\n                placeholder=\"name@mail.com\"\r\n                className=\" !border-t-blue-gray-200 focus:!border-t-gray-900\"\r\n                labelProps={{\r\n                  className: \"before:content-none after:content-none\",\r\n                }}\r\n              />\r\n              <Typography variant=\"h6\" color=\"blue-gray\" className=\"-mb-3\">\r\n                Password\r\n              </Typography>\r\n              <Input\r\n                onChange={onChangeInput}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                size=\"lg\"\r\n                placeholder=\"********\"\r\n                className=\" !border-t-blue-gray-200 focus:!border-t-gray-900\"\r\n                labelProps={{\r\n                  className: \"before:content-none after:content-none\",\r\n                }}\r\n              />\r\n            </div>\r\n            <Button type=\"submit\" className=\"mt-6\" fullWidth>\r\n              Sign in\r\n            </Button>\r\n            <Button onClick={handleCloseModal} className=\"mt-4\" fullWidth>\r\n              Cancel\r\n            </Button>\r\n          </form>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}