{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport AxiosClient from \"../client/client\";\nconst client = new AxiosClient();\nconst initialState = {\n  works: [],\n  isLoading: false,\n  error: null,\n  totalWorks: 0,\n  currentPage: 1,\n  pageSize: 4,\n  page: 1,\n  totalPage: 1\n};\nexport const getAllWorks = createAsyncThunk(`work/GETWORKS`, async page => {\n  return await client.get(`/works?page=${page}`);\n});\nconst worksSlice = createSlice({\n  name: \"works\",\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(getAllWorks.pending, state => {\n      state.isLoading = true;\n    }).addCase(getAllWorks.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.totalWorks = action.payload.length;\n      state.works = action.payload;\n      state.totalPage = Math.ceil(action.payload.length / state.pageSize);\n    }).addCase(getAllWorks.rejected, state => {\n      state.isLoading = false;\n      state.error = \"Ops, an error has occurred.\";\n    });\n  }\n});\nexport const allWorks = state => state.worksData.works;\nexport const isWorkLoading = state => state.worksData.isLoading;\nexport const worksError = state => state.worksData.error;\nexport const selectCurrentPage = state => state.worksData.currentPage;\nexport const selectPageSize = state => state.worksData.pageSize;\nexport const selectTotalWorks = state => state.worksData.totalWorks;\nexport const selectTotalPage = state => state.worksData.totalPage;\nexport default worksSlice.reducer;\n\n// import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n// import AxiosClient from \"../client/client\";\n\n// const client = new AxiosClient();\n\n// const initialState = {\n//   works: [],\n//   isLoading: false,\n//   error: null,\n//   totalWorks: 0,\n//   currentPage: 1,\n//   pageSize: 4,\n// };\n\n// export const getAllWorks = createAsyncThunk(\n//   \"works/getAllWorks\",\n//   async (page, { rejectWithValue }) => {\n//     try {\n//       const response = await client.get(`/works?page=${page}`);\n//       return response.data;\n//     } catch (error) {\n//       return rejectWithValue(error.response.data);\n//     }\n//   }\n// );\n\n// const worksSlice = createSlice({\n//   name: \"works\",\n//   initialState,\n//   reducers: {},\n//   extraReducers: (builder) => {\n//     builder\n//       .addCase(getAllWorks.pending, (state) => {\n//         state.isLoading = true;\n//         state.error = null;\n//       })\n//       .addCase(getAllWorks.fulfilled, (state, action) => {\n//         state.isLoading = false;\n//         state.totalWorks = action.payload.totalWorks;\n//         state.works = action.payload.payload;\n//       })\n//       .addCase(getAllWorks.rejected, (state, action) => {\n//         state.isLoading = false;\n//         state.error = action.payload.message;\n//       });\n//   },\n// });\n\n// export const selectWorks = (state) => state.works.works;\n// export const selectIsLoading = (state) => state.works.isLoading;\n// export const selectError = (state) => state.works.error;\n// export const selectCurrentPage = (state) => state.works.currentPage;\n// export const selectPageSize = (state) => state.works.pageSize;\n// export const selectTotalWorks = (state) => state.works.totalWorks;\n\n// export default worksSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","AxiosClient","client","initialState","works","isLoading","error","totalWorks","currentPage","pageSize","page","totalPage","getAllWorks","get","worksSlice","name","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","length","Math","ceil","rejected","allWorks","worksData","isWorkLoading","worksError","selectCurrentPage","selectPageSize","selectTotalWorks","selectTotalPage","reducer"],"sources":["C:/Users/andre/OneDrive/Desktop/web developer/epicode/esercizi/capstone_Andrea_Frabotta/view/src/redux/WorkCardSlice.js"],"sourcesContent":["import { createAsyncThunk,createSlice } from \"@reduxjs/toolkit\";\r\nimport AxiosClient from \"../client/client\";\r\n\r\nconst client = new AxiosClient();\r\n\r\nconst initialState = {\r\n  works: [],\r\n  isLoading: false,\r\n  error: null,\r\n  totalWorks: 0,\r\n  currentPage:1,\r\n  pageSize:4,\r\n  page:1,\r\n  totalPage:1,\r\n};\r\n\r\nexport const getAllWorks = createAsyncThunk(`work/GETWORKS`, async (page) => {\r\n    return await client.get(`/works?page=${page}`);\r\n});\r\n\r\nconst worksSlice = createSlice({\r\n    name: \"works\",\r\n    initialState,\r\n    extraReducers: (builder) => {\r\n      builder\r\n        .addCase(getAllWorks.pending, (state) => {\r\n          state.isLoading = true;\r\n        })\r\n        .addCase(getAllWorks.fulfilled, (state, action) => { \r\n          state.isLoading = false;\r\n          state.totalWorks = action.payload.length;\r\n          state.works = action.payload;\r\n          state.totalPage = Math.ceil(action.payload.length / state.pageSize);\r\n        })\r\n        .addCase(getAllWorks.rejected, (state) => {\r\n          state.isLoading = false;\r\n          state.error = \"Ops, an error has occurred.\";\r\n        });\r\n    },\r\n  });\r\n  \r\n\r\nexport const allWorks = (state) => state.worksData.works;\r\nexport const isWorkLoading = (state) => state.worksData.isLoading;\r\nexport const worksError = (state) => state.worksData.error;\r\nexport const selectCurrentPage = (state) => state.worksData.currentPage;\r\nexport const selectPageSize = (state) => state.worksData.pageSize;\r\nexport const selectTotalWorks = (state) => state.worksData.totalWorks;\r\nexport const selectTotalPage =(state)=>state.worksData.totalPage;\r\nexport default worksSlice.reducer;\r\n\r\n\r\n\r\n// import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n// import AxiosClient from \"../client/client\";\r\n\r\n// const client = new AxiosClient();\r\n\r\n// const initialState = {\r\n//   works: [],\r\n//   isLoading: false,\r\n//   error: null,\r\n//   totalWorks: 0,\r\n//   currentPage: 1,\r\n//   pageSize: 4,\r\n// };\r\n\r\n// export const getAllWorks = createAsyncThunk(\r\n//   \"works/getAllWorks\",\r\n//   async (page, { rejectWithValue }) => {\r\n//     try {\r\n//       const response = await client.get(`/works?page=${page}`);\r\n//       return response.data;\r\n//     } catch (error) {\r\n//       return rejectWithValue(error.response.data);\r\n//     }\r\n//   }\r\n// );\r\n\r\n// const worksSlice = createSlice({\r\n//   name: \"works\",\r\n//   initialState,\r\n//   reducers: {},\r\n//   extraReducers: (builder) => {\r\n//     builder\r\n//       .addCase(getAllWorks.pending, (state) => {\r\n//         state.isLoading = true;\r\n//         state.error = null;\r\n//       })\r\n//       .addCase(getAllWorks.fulfilled, (state, action) => {\r\n//         state.isLoading = false;\r\n//         state.totalWorks = action.payload.totalWorks;\r\n//         state.works = action.payload.payload;\r\n//       })\r\n//       .addCase(getAllWorks.rejected, (state, action) => {\r\n//         state.isLoading = false;\r\n//         state.error = action.payload.message;\r\n//       });\r\n//   },\r\n// });\r\n\r\n// export const selectWorks = (state) => state.works.works;\r\n// export const selectIsLoading = (state) => state.works.isLoading;\r\n// export const selectError = (state) => state.works.error;\r\n// export const selectCurrentPage = (state) => state.works.currentPage;\r\n// export const selectPageSize = (state) => state.works.pageSize;\r\n// export const selectTotalWorks = (state) => state.works.totalWorks;\r\n\r\n// export default worksSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAACC,WAAW,QAAQ,kBAAkB;AAC/D,OAAOC,WAAW,MAAM,kBAAkB;AAE1C,MAAMC,MAAM,GAAG,IAAID,WAAW,CAAC,CAAC;AAEhC,MAAME,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE,IAAI;EACXC,UAAU,EAAE,CAAC;EACbC,WAAW,EAAC,CAAC;EACbC,QAAQ,EAAC,CAAC;EACVC,IAAI,EAAC,CAAC;EACNC,SAAS,EAAC;AACZ,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGb,gBAAgB,CAAE,eAAc,EAAE,MAAOW,IAAI,IAAK;EACzE,OAAO,MAAMR,MAAM,CAACW,GAAG,CAAE,eAAcH,IAAK,EAAC,CAAC;AAClD,CAAC,CAAC;AAEF,MAAMI,UAAU,GAAGd,WAAW,CAAC;EAC3Be,IAAI,EAAE,OAAO;EACbZ,YAAY;EACZa,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACN,WAAW,CAACO,OAAO,EAAGC,KAAK,IAAK;MACvCA,KAAK,CAACf,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDa,OAAO,CAACN,WAAW,CAACS,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAACf,SAAS,GAAG,KAAK;MACvBe,KAAK,CAACb,UAAU,GAAGe,MAAM,CAACC,OAAO,CAACC,MAAM;MACxCJ,KAAK,CAAChB,KAAK,GAAGkB,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACT,SAAS,GAAGc,IAAI,CAACC,IAAI,CAACJ,MAAM,CAACC,OAAO,CAACC,MAAM,GAAGJ,KAAK,CAACX,QAAQ,CAAC;IACrE,CAAC,CAAC,CACDS,OAAO,CAACN,WAAW,CAACe,QAAQ,EAAGP,KAAK,IAAK;MACxCA,KAAK,CAACf,SAAS,GAAG,KAAK;MACvBe,KAAK,CAACd,KAAK,GAAG,6BAA6B;IAC7C,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAGJ,OAAO,MAAMsB,QAAQ,GAAIR,KAAK,IAAKA,KAAK,CAACS,SAAS,CAACzB,KAAK;AACxD,OAAO,MAAM0B,aAAa,GAAIV,KAAK,IAAKA,KAAK,CAACS,SAAS,CAACxB,SAAS;AACjE,OAAO,MAAM0B,UAAU,GAAIX,KAAK,IAAKA,KAAK,CAACS,SAAS,CAACvB,KAAK;AAC1D,OAAO,MAAM0B,iBAAiB,GAAIZ,KAAK,IAAKA,KAAK,CAACS,SAAS,CAACrB,WAAW;AACvE,OAAO,MAAMyB,cAAc,GAAIb,KAAK,IAAKA,KAAK,CAACS,SAAS,CAACpB,QAAQ;AACjE,OAAO,MAAMyB,gBAAgB,GAAId,KAAK,IAAKA,KAAK,CAACS,SAAS,CAACtB,UAAU;AACrE,OAAO,MAAM4B,eAAe,GAAGf,KAAK,IAAGA,KAAK,CAACS,SAAS,CAAClB,SAAS;AAChE,eAAeG,UAAU,CAACsB,OAAO;;AAIjC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}