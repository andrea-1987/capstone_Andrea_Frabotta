{"ast":null,"code":"// import { createAsyncThunk,createSlice } from \"@reduxjs/toolkit\";\n// import AxiosClient from \"../client/client\";\n\n// const client = new AxiosClient();\n\n// const initialState = {\n//   works: [],\n//   isLoading: false,\n//   error: null,\n//   totalWorks: 0,\n//   currentPage:1,\n//   pageSize:3,\n//   page:1,\n//   totalPage:1,\n// };\n\n// export const getAllWorks = createAsyncThunk(`work/GETWORKS`, async (page) => {\n//     return await client.get(`/works?page=${page}`);\n// });\n\n// const worksSlice = createSlice({\n//     name: \"works\",\n//     initialState,\n//     extraReducers: (builder) => {\n//       builder\n//         .addCase(getAllWorks.pending, (state) => {\n//           state.isLoading = true;\n//         })\n//         .addCase(getAllWorks.fulfilled, (state, action) => { \n//           state.isLoading = false;\n//           state.totalWorks = action.payload.length;\n//           state.works = action.payload;\n//           state.totalPage = Math.ceil(action.payload.length / state.pageSize);\n//         })\n//         .addCase(getAllWorks.rejected, (state) => {\n//           state.isLoading = false;\n//           state.error = \"Ops, an error has occurred.\";\n//         });\n//     },\n//   });\n\n// export const allWorks = (state) => state.worksData.works;\n// export const isWorkLoading = (state) => state.worksData.isLoading;\n// export const worksError = (state) => state.worksData.error;\n// export const selectCurrentPage = (state) => state.worksData.currentPage;\n// export const selectPageSize = (state) => state.worksData.pageSize;\n// export const selectTotalWorks = (state) => state.worksData.totalWorks;\n// export const selectTotalPage =(state)=>state.worksData.totalPage;\n// export default worksSlice.reducer;\n\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport AxiosClient from \"../client/client\";\nconst client = new AxiosClient();\nconst initialState = {\n  works: [],\n  isLoading: false,\n  error: null,\n  currentPage: 1,\n  pageSize: 3,\n  // Aggiornato il valore predefinito della pageSize\n  totalPage: 1\n};\n\n// Azione asincrona per ottenere tutti i lavori paginati\nexport const getAllWorks = createAsyncThunk(\"works/getAllWorks\", async (page, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await client.get(`/works?page=${page}`);\n    return response.data; // Restituisci solo i dati necessari dalla risposta\n  } catch (error) {\n    return rejectWithValue(error.response.data); // Gestisci eventuali errori di richiesta\n  }\n});\nconst worksSlice = createSlice({\n  name: \"works\",\n  initialState,\n  reducers: {\n    setCurrentPage(state, action) {\n      state.currentPage = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getAllWorks.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(getAllWorks.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.works = action.payload.payload;\n      state.totalPage = Math.ceil(action.payload.totalWorks / state.pageSize);\n    }).addCase(getAllWorks.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload.message;\n    });\n  }\n});\nexport const selectWorks = state => state.works.works;\nexport const selectIsLoading = state => state.works.isLoading;\nexport const selectError = state => state.works.error;\nexport const selectCurrentPage = state => state.works.currentPage;\nexport const selectPageSize = state => state.works.pageSize;\nexport const selectTotalPage = state => state.works.totalPage;\nexport const {\n  setCurrentPage\n} = worksSlice.actions;\nexport default worksSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","AxiosClient","client","initialState","works","isLoading","error","currentPage","pageSize","totalPage","getAllWorks","page","rejectWithValue","response","get","data","worksSlice","name","reducers","setCurrentPage","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","Math","ceil","totalWorks","rejected","message","selectWorks","selectIsLoading","selectError","selectCurrentPage","selectPageSize","selectTotalPage","actions","reducer"],"sources":["C:/Users/andre/OneDrive/Desktop/web developer/epicode/esercizi/capstone_Andrea_Frabotta/view/src/redux/WorkCardSlice.js"],"sourcesContent":["// import { createAsyncThunk,createSlice } from \"@reduxjs/toolkit\";\r\n// import AxiosClient from \"../client/client\";\r\n\r\n// const client = new AxiosClient();\r\n\r\n// const initialState = {\r\n//   works: [],\r\n//   isLoading: false,\r\n//   error: null,\r\n//   totalWorks: 0,\r\n//   currentPage:1,\r\n//   pageSize:3,\r\n//   page:1,\r\n//   totalPage:1,\r\n// };\r\n\r\n// export const getAllWorks = createAsyncThunk(`work/GETWORKS`, async (page) => {\r\n//     return await client.get(`/works?page=${page}`);\r\n// });\r\n\r\n// const worksSlice = createSlice({\r\n//     name: \"works\",\r\n//     initialState,\r\n//     extraReducers: (builder) => {\r\n//       builder\r\n//         .addCase(getAllWorks.pending, (state) => {\r\n//           state.isLoading = true;\r\n//         })\r\n//         .addCase(getAllWorks.fulfilled, (state, action) => { \r\n//           state.isLoading = false;\r\n//           state.totalWorks = action.payload.length;\r\n//           state.works = action.payload;\r\n//           state.totalPage = Math.ceil(action.payload.length / state.pageSize);\r\n//         })\r\n//         .addCase(getAllWorks.rejected, (state) => {\r\n//           state.isLoading = false;\r\n//           state.error = \"Ops, an error has occurred.\";\r\n//         });\r\n//     },\r\n//   });\r\n  \r\n\r\n// export const allWorks = (state) => state.worksData.works;\r\n// export const isWorkLoading = (state) => state.worksData.isLoading;\r\n// export const worksError = (state) => state.worksData.error;\r\n// export const selectCurrentPage = (state) => state.worksData.currentPage;\r\n// export const selectPageSize = (state) => state.worksData.pageSize;\r\n// export const selectTotalWorks = (state) => state.worksData.totalWorks;\r\n// export const selectTotalPage =(state)=>state.worksData.totalPage;\r\n// export default worksSlice.reducer;\r\n\r\n\r\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport AxiosClient from \"../client/client\";\r\n\r\nconst client = new AxiosClient();\r\n\r\nconst initialState = {\r\n  works: [],\r\n  isLoading: false,\r\n  error: null,\r\n  currentPage: 1,\r\n  pageSize: 3, // Aggiornato il valore predefinito della pageSize\r\n  totalPage: 1,\r\n};\r\n\r\n// Azione asincrona per ottenere tutti i lavori paginati\r\nexport const getAllWorks = createAsyncThunk(\"works/getAllWorks\", async (page, { rejectWithValue }) => {\r\n  try {\r\n    const response = await client.get(`/works?page=${page}`);\r\n    return response.data; // Restituisci solo i dati necessari dalla risposta\r\n  } catch (error) {\r\n    return rejectWithValue(error.response.data); // Gestisci eventuali errori di richiesta\r\n  }\r\n});\r\n\r\nconst worksSlice = createSlice({\r\n  name: \"works\",\r\n  initialState,\r\n  reducers: {\r\n    setCurrentPage(state, action) {\r\n      state.currentPage = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getAllWorks.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(getAllWorks.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.works = action.payload.payload; \r\n        state.totalPage = Math.ceil(action.payload.totalWorks / state.pageSize);\r\n      })\r\n      .addCase(getAllWorks.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport const selectWorks = (state) => state.works.works;\r\nexport const selectIsLoading = (state) => state.works.isLoading;\r\nexport const selectError = (state) => state.works.error;\r\nexport const selectCurrentPage = (state) => state.works.currentPage;\r\nexport const selectPageSize = (state) => state.works.pageSize;\r\nexport const selectTotalPage = (state) => state.works.totalPage;\r\n\r\nexport const { setCurrentPage } = worksSlice.actions;\r\n\r\nexport default worksSlice.reducer;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}