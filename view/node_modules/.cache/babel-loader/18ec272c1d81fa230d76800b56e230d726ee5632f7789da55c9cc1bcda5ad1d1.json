{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\OneDrive\\\\Desktop\\\\web developer\\\\epicode\\\\esercizi\\\\capstone_Andrea_Frabotta\\\\view\\\\src\\\\components\\\\workContent\\\\WorksContent.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { CustomSpinner } from \"../loading/Loader\";\n// import { ErrorAlert } from \"../error/Error\";\n// import { UserCards } from \"../card/UserCard\";\n// import { isWorkLoading, worksError } from \"../../redux/WorkCardSlice\";\n// import styles from \"./workContent.module.css\";\n// import { DefaultPagination } from \"../pagination/Pagination\";\n\n// import { setFiltered } from \"../../redux/FilterSlice\";\n\n// export const WorksContent = () => {\n//   const isLoading = useSelector(isWorkLoading);\n//   const error = useSelector(worksError);\n//    const [page, setPage] = useState(1);\n//   const [works, setWorks] = useState([]);\n//   const [totalPages, setTotalPages] = useState(0);\n\n//   const filtered = useSelector(setFiltered); \n\n//   const getAllWorks = async () => {\n//     try {\n//       const response = await fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/works?page=${page}`);\n//       const data = await response.json();\n//       setWorks(data.payload); \n//       setTotalPages(data.totalPages); \n//     } catch (error) {\n//       alert(\"Error fetching works:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     getAllWorks();\n//     window.scrollTo(0, 0);\n\n//   }, [page,filtered]);\n\n//   const onPageChange = (newPage) => {\n//     setPage(newPage);\n//   };\n\n//   return (\n//     <div className={`${styles.content}`}>\n//       {isLoading && <CustomSpinner />}\n//       {!isLoading && error && <ErrorAlert message=\"Ops! Qualcosa è andato storto\" />}\n//       {!isLoading && !error && (\n//       works.map((work) => (\n//           <div key={work._id}>\n//             <UserCards\n//               className={`${styles.card}`}\n//               author={work.author}\n//               description={work.description}\n//               title={work.title}\n//               img={work.img}\n//               location={work.location}\n//               pubDate={work.pubDate}\n//               _id={work._id}\n//             />\n//           </div>\n//         ))\n//       )}\n\n//       <DefaultPagination\n//         onPageChange={onPageChange}\n//         currentPage={page}\n//         totalPage={totalPages} \n//       />\n//     </div>\n//   );\n// };\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CustomSpinner } from \"../loading/Loader\";\nimport { ErrorAlert } from \"../error/Error\";\nimport { UserCards } from \"../card/UserCard\";\nimport { isWorkLoading, worksError, allWorks } from \"../../redux/WorkCardSlice\";\nimport styles from \"./workContent.module.css\";\nimport { DefaultPagination } from \"../pagination/Pagination\";\nimport { setFiltered } from \"../../redux/FilterSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WorksContent = () => {\n  _s();\n  const isLoading = useSelector(isWorkLoading);\n  const error = useSelector(worksError);\n  const allWorkData = useSelector(allWorks);\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(1);\n  const [filteredWorks, setFilteredWorks] = useState([]);\n  const filtered = useSelector(state => state.filter.filtered);\n  useEffect(() => {\n    if (allWorkData.length === 0) {\n      dispatch(getAllWorks());\n    } else {\n      filterWorks();\n    }\n  }, [allWorkData, filtered, page]);\n  const getAllWorks = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/works?page=${page}`);\n      const data = await response.json();\n      setWorks(data.payload);\n      setTotalPages(data.totalPages);\n    } catch (error) {\n      alert(\"Error fetching works:\", error);\n    }\n  };\n  const filterWorks = () => {\n    let filteredData = allWorkData.filter(work => {\n      return work.title.toLowerCase().includes(filtered.job.toLowerCase()) && work.location.toLowerCase().includes(filtered.location.toLowerCase());\n    });\n    setFilteredWorks(filteredData);\n  };\n  const onPageChange = newPage => {\n    setPage(newPage);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.content}`,\n    children: [isLoading && /*#__PURE__*/_jsxDEV(CustomSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      message: \"Ops! Qualcosa \\xE8 andato storto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 31\n    }, this), !isLoading && !error && filteredWorks.map(work => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(UserCards, {\n        className: `${styles.card}`,\n        author: work.author,\n        description: work.description,\n        title: work.title,\n        img: work.img,\n        location: work.location,\n        pubDate: work.pubDate,\n        _id: work._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this)\n    }, work._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(DefaultPagination, {\n      onPageChange: onPageChange,\n      currentPage: page,\n      totalPage: totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(WorksContent, \"aX4YYGOuBS23iwRyk1m2+V/cIas=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch, useSelector];\n});\n_c = WorksContent;\nvar _c;\n$RefreshReg$(_c, \"WorksContent\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","CustomSpinner","ErrorAlert","UserCards","isWorkLoading","worksError","allWorks","styles","DefaultPagination","setFiltered","jsxDEV","_jsxDEV","WorksContent","_s","isLoading","error","allWorkData","dispatch","page","setPage","filteredWorks","setFilteredWorks","filtered","state","filter","length","getAllWorks","filterWorks","response","fetch","process","env","REACT_APP_SERVER_BASE_URL","data","json","setWorks","payload","setTotalPages","totalPages","alert","filteredData","work","title","toLowerCase","includes","job","location","onPageChange","newPage","className","content","children","fileName","_jsxFileName","lineNumber","columnNumber","message","map","card","author","description","img","pubDate","_id","currentPage","totalPage","_c","$RefreshReg$"],"sources":["C:/Users/andre/OneDrive/Desktop/web developer/epicode/esercizi/capstone_Andrea_Frabotta/view/src/components/workContent/WorksContent.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { CustomSpinner } from \"../loading/Loader\";\r\n// import { ErrorAlert } from \"../error/Error\";\r\n// import { UserCards } from \"../card/UserCard\";\r\n// import { isWorkLoading, worksError } from \"../../redux/WorkCardSlice\";\r\n// import styles from \"./workContent.module.css\";\r\n// import { DefaultPagination } from \"../pagination/Pagination\";\r\n\r\n// import { setFiltered } from \"../../redux/FilterSlice\";\r\n\r\n// export const WorksContent = () => {\r\n//   const isLoading = useSelector(isWorkLoading);\r\n//   const error = useSelector(worksError);\r\n//    const [page, setPage] = useState(1);\r\n//   const [works, setWorks] = useState([]);\r\n//   const [totalPages, setTotalPages] = useState(0);\r\n  \r\n//   const filtered = useSelector(setFiltered); \r\n \r\n//   const getAllWorks = async () => {\r\n//     try {\r\n//       const response = await fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/works?page=${page}`);\r\n//       const data = await response.json();\r\n//       setWorks(data.payload); \r\n//       setTotalPages(data.totalPages); \r\n//     } catch (error) {\r\n//       alert(\"Error fetching works:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     getAllWorks();\r\n//     window.scrollTo(0, 0);\r\n    \r\n//   }, [page,filtered]);\r\n\r\n//   const onPageChange = (newPage) => {\r\n//     setPage(newPage);\r\n//   };\r\n\r\n//   return (\r\n//     <div className={`${styles.content}`}>\r\n//       {isLoading && <CustomSpinner />}\r\n//       {!isLoading && error && <ErrorAlert message=\"Ops! Qualcosa è andato storto\" />}\r\n//       {!isLoading && !error && (\r\n//       works.map((work) => (\r\n//           <div key={work._id}>\r\n//             <UserCards\r\n//               className={`${styles.card}`}\r\n//               author={work.author}\r\n//               description={work.description}\r\n//               title={work.title}\r\n//               img={work.img}\r\n//               location={work.location}\r\n//               pubDate={work.pubDate}\r\n//               _id={work._id}\r\n//             />\r\n//           </div>\r\n//         ))\r\n//       )}\r\n\r\n//       <DefaultPagination\r\n//         onPageChange={onPageChange}\r\n//         currentPage={page}\r\n//         totalPage={totalPages} \r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CustomSpinner } from \"../loading/Loader\";\r\nimport { ErrorAlert } from \"../error/Error\";\r\nimport { UserCards } from \"../card/UserCard\";\r\nimport { isWorkLoading, worksError, allWorks } from \"../../redux/WorkCardSlice\";\r\nimport styles from \"./workContent.module.css\";\r\nimport { DefaultPagination } from \"../pagination/Pagination\";\r\nimport { setFiltered } from \"../../redux/FilterSlice\";\r\n\r\nexport const WorksContent = () => {\r\n  const isLoading = useSelector(isWorkLoading);\r\n  const error = useSelector(worksError);\r\n  const allWorkData = useSelector(allWorks);\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = useState(1);\r\n  const [filteredWorks, setFilteredWorks] = useState([]);\r\n\r\n  const filtered = useSelector((state) => state.filter.filtered);\r\n\r\n  useEffect(() => {\r\n    if (allWorkData.length === 0) {\r\n      dispatch(getAllWorks());\r\n    } else {\r\n      filterWorks();\r\n    }\r\n  }, [allWorkData, filtered, page]);\r\n\r\n  const getAllWorks = async () => {\r\n    try {\r\n            const response = await fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/works?page=${page}`);\r\n      const data = await response.json();\r\n      setWorks(data.payload); \r\n      setTotalPages(data.totalPages); \r\n    } catch (error) {\r\n      alert(\"Error fetching works:\", error);\r\n    }\r\n  };\r\n\r\n  const filterWorks = () => {\r\n    let filteredData = allWorkData.filter((work) => {\r\n      return (\r\n        work.title.toLowerCase().includes(filtered.job.toLowerCase()) &&\r\n        work.location.toLowerCase().includes(filtered.location.toLowerCase())\r\n      );\r\n    });\r\n    setFilteredWorks(filteredData);\r\n  };\r\n\r\n  const onPageChange = (newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.content}`}>\r\n      {isLoading && <CustomSpinner />}\r\n      {!isLoading && error && <ErrorAlert message=\"Ops! Qualcosa è andato storto\" />}\r\n      {!isLoading && !error && (\r\n        filteredWorks.map((work) => (\r\n          <div key={work._id}>\r\n            <UserCards\r\n              className={`${styles.card}`}\r\n              author={work.author}\r\n              description={work.description}\r\n              title={work.title}\r\n              img={work.img}\r\n              location={work.location}\r\n              pubDate={work.pubDate}\r\n              _id={work._id}\r\n            />\r\n          </div>\r\n        ))\r\n      )}\r\n\r\n      <DefaultPagination\r\n        onPageChange={onPageChange}\r\n        currentPage={page}\r\n        totalPage={totalPages} \r\n      />\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,2BAA2B;AAC/E,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,SAASC,iBAAiB,QAAQ,0BAA0B;AAC5D,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,SAAS,GAAGd,WAAW,CAACI,aAAa,CAAC;EAC5C,MAAMW,KAAK,GAAGf,WAAW,CAACK,UAAU,CAAC;EACrC,MAAMW,WAAW,GAAGhB,WAAW,CAACM,QAAQ,CAAC;EACzC,MAAMW,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMwB,QAAQ,GAAGtB,WAAW,CAAEuB,KAAK,IAAKA,KAAK,CAACC,MAAM,CAACF,QAAQ,CAAC;EAE9DzB,SAAS,CAAC,MAAM;IACd,IAAImB,WAAW,CAACS,MAAM,KAAK,CAAC,EAAE;MAC5BR,QAAQ,CAACS,WAAW,CAAC,CAAC,CAAC;IACzB,CAAC,MAAM;MACLC,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAACX,WAAW,EAAEM,QAAQ,EAAEJ,IAAI,CAAC,CAAC;EAEjC,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACI,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,yBAA0B,eAAcd,IAAK,EAAC,CAAC;MACjG,MAAMe,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCC,QAAQ,CAACF,IAAI,CAACG,OAAO,CAAC;MACtBC,aAAa,CAACJ,IAAI,CAACK,UAAU,CAAC;IAChC,CAAC,CAAC,OAAOvB,KAAK,EAAE;MACdwB,KAAK,CAAC,uBAAuB,EAAExB,KAAK,CAAC;IACvC;EACF,CAAC;EAED,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIa,YAAY,GAAGxB,WAAW,CAACQ,MAAM,CAAEiB,IAAI,IAAK;MAC9C,OACEA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACtB,QAAQ,CAACuB,GAAG,CAACF,WAAW,CAAC,CAAC,CAAC,IAC7DF,IAAI,CAACK,QAAQ,CAACH,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACtB,QAAQ,CAACwB,QAAQ,CAACH,WAAW,CAAC,CAAC,CAAC;IAEzE,CAAC,CAAC;IACFtB,gBAAgB,CAACmB,YAAY,CAAC;EAChC,CAAC;EAED,MAAMO,YAAY,GAAIC,OAAO,IAAK;IAChC7B,OAAO,CAAC6B,OAAO,CAAC;EAClB,CAAC;EAED,oBACErC,OAAA;IAAKsC,SAAS,EAAG,GAAE1C,MAAM,CAAC2C,OAAQ,EAAE;IAAAC,QAAA,GACjCrC,SAAS,iBAAIH,OAAA,CAACV,aAAa;MAAAmD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9B,CAACzC,SAAS,IAAIC,KAAK,iBAAIJ,OAAA,CAACT,UAAU;MAACsD,OAAO,EAAC;IAA+B;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7E,CAACzC,SAAS,IAAI,CAACC,KAAK,IACnBK,aAAa,CAACqC,GAAG,CAAEhB,IAAI,iBACrB9B,OAAA;MAAAwC,QAAA,eACExC,OAAA,CAACR,SAAS;QACR8C,SAAS,EAAG,GAAE1C,MAAM,CAACmD,IAAK,EAAE;QAC5BC,MAAM,EAAElB,IAAI,CAACkB,MAAO;QACpBC,WAAW,EAAEnB,IAAI,CAACmB,WAAY;QAC9BlB,KAAK,EAAED,IAAI,CAACC,KAAM;QAClBmB,GAAG,EAAEpB,IAAI,CAACoB,GAAI;QACdf,QAAQ,EAAEL,IAAI,CAACK,QAAS;QACxBgB,OAAO,EAAErB,IAAI,CAACqB,OAAQ;QACtBC,GAAG,EAAEtB,IAAI,CAACsB;MAAI;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IAAC,GAVMd,IAAI,CAACsB,GAAG;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWb,CACN,CACF,eAED5C,OAAA,CAACH,iBAAiB;MAChBuC,YAAY,EAAEA,YAAa;MAC3BiB,WAAW,EAAE9C,IAAK;MAClB+C,SAAS,EAAE3B;IAAW;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC1C,EAAA,CAvEWD,YAAY;EAAA,QACLZ,WAAW,EACfA,WAAW,EACLA,WAAW,EACdD,WAAW,EAIXC,WAAW;AAAA;AAAAkE,EAAA,GARjBtD,YAAY;AAAA,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}