{"ast":null,"code":"var _s = $RefreshSig$();\n// import {useEffect} from 'react';\n// import {useLocation, useNavigate} from \"react-router-dom\";\n// import { jwtDecode } from \"jwt-decode\";\n\n// const useSession = () => {\n//     const session = JSON.parse(localStorage.getItem('auth'));\n//     const decodedSession = session ? jwtDecode(session) : null;\n\n//     const location = useLocation()\n//     const navigate = useNavigate()\n\n//     useEffect(() => {\n//         if (!session) {\n//             navigate('/', {replace: true})\n//         }\n\n//         if (session && location.pathname !== '/'){\n//             return;\n//         }\n//         navigate('/home', {replace: true})\n\n//     }, [navigate, session]);\n\n//     return decodedSession;\n// };\n\n// export default useSession;\nimport { useEffect } from 'react';\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from 'jwt-decode';\nconst useSession = () => {\n  _s();\n  const session = localStorage.getItem('auth');\n  const decodedSession = session ? jwtDecode(session) : null;\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!session) {\n      navigate('/login', {\n        replace: true\n      });\n    }\n    if (session && location.pathname !== '/') {\n      return;\n    }\n    try {\n      const decodedToken = jwtDecode(session);\n      const role = decodedToken.role;\n      if (role === 'user') {\n        navigate(`/user/${decodedToken._id}`, {\n          replace: true\n        });\n      } else if (role === 'professional') {\n        navigate(`/professional/${decodedToken._id}`, {\n          replace: true\n        });\n      } else {\n        alert('Unknown role');\n      }\n    } catch (error) {\n      alert('Failed to parse token');\n    }\n  }, [navigate, session]);\n  return decodedSession;\n};\n_s(useSession, \"fPjCxODVr6jVvib6o2c9VLE4s84=\", false, function () {\n  return [useLocation, useNavigate];\n});\nexport default useSession;","map":{"version":3,"names":["useEffect","useLocation","useNavigate","jwtDecode","useSession","_s","session","localStorage","getItem","decodedSession","location","navigate","replace","pathname","decodedToken","role","_id","alert","error"],"sources":["C:/Users/andre/OneDrive/Desktop/web developer/epicode/esercizi/capstone_Andrea_Frabotta/view/src/hooks/useSession.js"],"sourcesContent":["// import {useEffect} from 'react';\r\n// import {useLocation, useNavigate} from \"react-router-dom\";\r\n// import { jwtDecode } from \"jwt-decode\";\r\n\r\n// const useSession = () => {\r\n//     const session = JSON.parse(localStorage.getItem('auth'));\r\n//     const decodedSession = session ? jwtDecode(session) : null;\r\n\r\n//     const location = useLocation()\r\n//     const navigate = useNavigate()\r\n\r\n//     useEffect(() => {\r\n//         if (!session) {\r\n//             navigate('/', {replace: true})\r\n//         }\r\n\r\n//         if (session && location.pathname !== '/'){\r\n//             return;\r\n//         }\r\n//         navigate('/home', {replace: true})\r\n\r\n//     }, [navigate, session]);\r\n\r\n//     return decodedSession;\r\n// };\r\n\r\n// export default useSession;\r\nimport { useEffect } from 'react';\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nconst useSession = () => {\r\n    const session = localStorage.getItem('auth');\r\n    const decodedSession = session ? jwtDecode(session) : null;\r\n\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if (!session) {\r\n            navigate('/login', { replace: true });\r\n        }\r\n\r\n        if (session && location.pathname !== '/') {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const decodedToken = jwtDecode(session);\r\n            const role = decodedToken.role;\r\n            if (role === 'user') {\r\n                navigate(`/user/${decodedToken._id}`, { replace: true });\r\n            } else if (role === 'professional') {\r\n                navigate(`/professional/${decodedToken._id}`, { replace: true });\r\n            } else {\r\n                alert('Unknown role');\r\n            }\r\n        } catch (error) {\r\n            alert('Failed to parse token');\r\n        }\r\n    }, [navigate, session]);\r\n\r\n    return decodedSession;\r\n};\r\n\r\nexport default useSession;\r\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,SAAS,QAAQ,YAAY;AAEtC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAC5C,MAAMC,cAAc,GAAGH,OAAO,GAAGH,SAAS,CAACG,OAAO,CAAC,GAAG,IAAI;EAE1D,MAAMI,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ,IAAI,CAACM,OAAO,EAAE;MACVK,QAAQ,CAAC,QAAQ,EAAE;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;IACzC;IAEA,IAAIN,OAAO,IAAII,QAAQ,CAACG,QAAQ,KAAK,GAAG,EAAE;MACtC;IACJ;IAEA,IAAI;MACA,MAAMC,YAAY,GAAGX,SAAS,CAACG,OAAO,CAAC;MACvC,MAAMS,IAAI,GAAGD,YAAY,CAACC,IAAI;MAC9B,IAAIA,IAAI,KAAK,MAAM,EAAE;QACjBJ,QAAQ,CAAE,SAAQG,YAAY,CAACE,GAAI,EAAC,EAAE;UAAEJ,OAAO,EAAE;QAAK,CAAC,CAAC;MAC5D,CAAC,MAAM,IAAIG,IAAI,KAAK,cAAc,EAAE;QAChCJ,QAAQ,CAAE,iBAAgBG,YAAY,CAACE,GAAI,EAAC,EAAE;UAAEJ,OAAO,EAAE;QAAK,CAAC,CAAC;MACpE,CAAC,MAAM;QACHK,KAAK,CAAC,cAAc,CAAC;MACzB;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZD,KAAK,CAAC,uBAAuB,CAAC;IAClC;EACJ,CAAC,EAAE,CAACN,QAAQ,EAAEL,OAAO,CAAC,CAAC;EAEvB,OAAOG,cAAc;AACzB,CAAC;AAACJ,EAAA,CAhCID,UAAU;EAAA,QAIKH,WAAW,EACXC,WAAW;AAAA;AA6BhC,eAAeE,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}