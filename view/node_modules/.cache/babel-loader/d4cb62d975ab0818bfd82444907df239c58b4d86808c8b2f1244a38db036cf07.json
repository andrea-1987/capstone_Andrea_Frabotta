{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// Azione asincrona per recuperare i dati utente\nexport const fetchUserData = createAsyncThunk(\"user/fetchUserData\", async (_, thunkAPI) => {\n  try {\n    const response = await axios.get(\"http://localhost:4040/users\");\n    return response.data; // Restituisci direttamente i dati dell'utente\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\n// Stato iniziale dello slice\nconst initialState = {\n  userData: null,\n  // Cambiato il nome della proprietà a userData\n  isLoading: false,\n  error: null\n};\n\n// Slice per gestire lo stato degli utenti\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchUserData.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    });\n    builder.addCase(fetchUserData.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.userData = action.payload; // Assegnato i dati dell'utente a userData\n    });\n    builder.addCase(fetchUserData.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\n\n// Selettore per ottenere i dati dell'utente dallo stato\nexport const selectUserData = state => state.user.userData; // Aggiornato il nome del selettore\n\n// Esporta il riduttore dello slice\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","fetchUserData","_","thunkAPI","response","get","data","error","rejectWithValue","message","initialState","userData","isLoading","userSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","selectUserData","user","reducer"],"sources":["C:/Users/andre/OneDrive/Desktop/web developer/epicode/esercizi/capstone_Andrea_Frabotta/view/src/redux/UserSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\n// Azione asincrona per recuperare i dati utente\r\nexport const fetchUserData = createAsyncThunk(\r\n  \"user/fetchUserData\",\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:4040/users\");\r\n      return response.data; // Restituisci direttamente i dati dell'utente\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n// Stato iniziale dello slice\r\nconst initialState = {\r\n  userData: null, // Cambiato il nome della proprietà a userData\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\n// Slice per gestire lo stato degli utenti\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchUserData.pending, (state) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    });\r\n    builder.addCase(fetchUserData.fulfilled, (state, action) => {\r\n      state.isLoading = false;\r\n      state.userData = action.payload; // Assegnato i dati dell'utente a userData\r\n    });\r\n    builder.addCase(fetchUserData.rejected, (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    });\r\n  },\r\n});\r\n\r\n// Selettore per ottenere i dati dell'utente dallo stato\r\nexport const selectUserData = (state) => state.user.userData; // Aggiornato il nome del selettore\r\n\r\n// Esporta il riduttore dello slice\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,aAAa,GAAGH,gBAAgB,CAC3C,oBAAoB,EACpB,OAAOI,CAAC,EAAEC,QAAQ,KAAK;EACrB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,6BAA6B,CAAC;IAC/D,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOJ,QAAQ,CAACK,eAAe,CAACD,KAAK,CAACE,OAAO,CAAC;EAChD;AACF,CACF,CAAC;;AAED;AACA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,IAAI;EAAE;EAChBC,SAAS,EAAE,KAAK;EAChBL,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMM,SAAS,GAAGd,WAAW,CAAC;EAC5Be,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACjB,aAAa,CAACkB,OAAO,EAAGC,KAAK,IAAK;MAChDA,KAAK,CAACR,SAAS,GAAG,IAAI;MACtBQ,KAAK,CAACb,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC;IACFU,OAAO,CAACC,OAAO,CAACjB,aAAa,CAACoB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC1DF,KAAK,CAACR,SAAS,GAAG,KAAK;MACvBQ,KAAK,CAACT,QAAQ,GAAGW,MAAM,CAACC,OAAO,CAAC,CAAC;IACnC,CAAC,CAAC;IACFN,OAAO,CAACC,OAAO,CAACjB,aAAa,CAACuB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACzDF,KAAK,CAACR,SAAS,GAAG,KAAK;MACvBQ,KAAK,CAACb,KAAK,GAAGe,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAME,cAAc,GAAIL,KAAK,IAAKA,KAAK,CAACM,IAAI,CAACf,QAAQ,CAAC,CAAC;;AAE9D;AACA,eAAeE,SAAS,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}