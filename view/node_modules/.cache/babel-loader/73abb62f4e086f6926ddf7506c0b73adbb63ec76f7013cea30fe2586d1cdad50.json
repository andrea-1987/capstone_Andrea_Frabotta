{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\OneDrive\\\\Desktop\\\\web developer\\\\epicode\\\\esercizi\\\\capstone_Andrea_Frabotta\\\\view\\\\src\\\\components\\\\workContent\\\\WorksContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CustomSpinner } from \"../loading/Loader\";\nimport { ErrorAlert } from \"../error/Error\";\nimport { UserCards } from \"../card/UserCard\";\nimport { getAllWorks, allWorks, isWorkLoading, worksError } from \"../../redux/WorkCardSlice\";\nimport styles from \"./workContent.module.css\";\nimport { DefaultPagination } from \"../pagination/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WorksContent = () => {\n  _s();\n  const dispatch = useDispatch();\n  // const works = useSelector(allWorks);\n  const isLoading = useSelector(isWorkLoading);\n  const error = useSelector(worksError);\n  const [page, setPage] = useState(1);\n  const [works, setWorks] = useState([]);\n  const getworks = async () => {\n    const response = await fetch(`http://localhost:4040/works?page=${page}`);\n    const data = response.json();\n    setWorks(data);\n  };\n  useEffect(() => {\n    getworks();\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.content,\n    children: [isLoading && /*#__PURE__*/_jsxDEV(CustomSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      message: \"Ops! Qualcosa \\xE8 andato storto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 31\n    }, this), !isLoading && !error && works.payload && works.payload.map(work => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(UserCards, {\n        className: `${styles.card} size-24`,\n        author: work.author,\n        description: work.description,\n        title: work.title,\n        img: work.img,\n        location: work.location,\n        pubDate: work.pubDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, work._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(DefaultPagination, {\n      className: styles.pagination,\n      onPageChange: onPageChange,\n      currentPage: works.currentPage,\n      totalPage: works.totalPage // Calcola il numero totale di pagine\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n// import React, { useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { CustomSpinner } from \"../loading/Loader\";\n// import { ErrorAlert } from \"../error/Error\";\n// import { UserCards } from \"../card/UserCard\";\n// import { getAllWorks, selectWorks, selectIsLoading, selectError, selectCurrentPage, selectPageSize, selectTotalWorks } from \"../../redux/WorkCardSlice\";\n// import styles from \"./workContent.module.css\";\n// import { DefaultPagination } from \"../pagination/Pagination\";\n\n// export const WorksContent = () => {\n//   const dispatch = useDispatch();\n//   const works = useSelector(selectWorks);\n//   const isLoading = useSelector(selectIsLoading);\n//   const error = useSelector(selectError);\n//   const currentPage = useSelector(selectCurrentPage);\n//   const pageSize = useSelector(selectPageSize);\n//   const totalWorks = useSelector(selectTotalWorks);\n\n//   useEffect(() => {\n//     dispatch(getAllWorks());\n//   }, [dispatch]);\n\n//   const onPageChange = (page) => {\n//     dispatch(getAllWorks({ page }));\n//   };\n\n//   return (\n//     <div className={styles.content}>\n//       {isLoading && <CustomSpinner />}\n//       {!isLoading && error && <ErrorAlert message=\"Ops! Qualcosa è andato storto.\" />}\n//       {!isLoading && !error && works && works.map((work) => (\n//         <div key={work._id}>\n//           <UserCards\n//             className={`${styles.card} size-24`}\n//             author={work.author}\n//             description={work.description}\n//             title={work.title}\n//             img={work.img}\n//             location={work.location}\n//             pubDate={work.pubDate}\n//           />\n//         </div>\n//       ))}\n//       <DefaultPagination\n//         currentPage={currentPage}\n//         pageSize={pageSize}\n//         totalPage={Math.ceil(totalWorks / pageSize)}\n//         onPageChange={onPageChange}\n//       />\n//     </div>\n//   );\n// };\n_s(WorksContent, \"MM8e9Zso/smnnpK9QofrLCGz2KY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = WorksContent;\nvar _c;\n$RefreshReg$(_c, \"WorksContent\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","CustomSpinner","ErrorAlert","UserCards","getAllWorks","allWorks","isWorkLoading","worksError","styles","DefaultPagination","jsxDEV","_jsxDEV","WorksContent","_s","dispatch","isLoading","error","page","setPage","works","setWorks","getworks","response","fetch","data","json","className","content","children","fileName","_jsxFileName","lineNumber","columnNumber","message","payload","map","work","card","author","description","title","img","location","pubDate","_id","pagination","onPageChange","currentPage","totalPage","_c","$RefreshReg$"],"sources":["C:/Users/andre/OneDrive/Desktop/web developer/epicode/esercizi/capstone_Andrea_Frabotta/view/src/components/workContent/WorksContent.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CustomSpinner } from \"../loading/Loader\";\r\nimport { ErrorAlert } from \"../error/Error\";\r\nimport { UserCards } from \"../card/UserCard\";\r\nimport { getAllWorks, allWorks, isWorkLoading, worksError } from \"../../redux/WorkCardSlice\";\r\nimport styles from \"./workContent.module.css\";\r\nimport { DefaultPagination } from \"../pagination/Pagination\";\r\n\r\nexport const WorksContent = () => {\r\n  const dispatch = useDispatch();\r\n  // const works = useSelector(allWorks);\r\n  const isLoading = useSelector(isWorkLoading);\r\n  const error = useSelector(worksError);\r\n  const [page,setPage]=useState(1)\r\n  const [works,setWorks]=useState([])\r\n\r\n  const getworks=async()=>{\r\n    const response=await fetch(`http://localhost:4040/works?page=${page}`)\r\n    const data = response.json();\r\n    setWorks(data)\r\n  }\r\nuseEffect(()=>{\r\n  getworks()\r\n},[page])\r\n\r\n\r\n  return (\r\n    <div className={styles.content}>\r\n      {isLoading && <CustomSpinner />}\r\n      {!isLoading && error && <ErrorAlert message=\"Ops! Qualcosa è andato storto\" />}\r\n      {!isLoading && !error && (\r\n        works.payload && works.payload.map((work) => (\r\n          <div key={work._id}>\r\n            <UserCards\r\n              className={`${styles.card} size-24`}\r\n              author={work.author}\r\n              description={work.description}\r\n              title={work.title}\r\n              img={work.img}\r\n              location={work.location}\r\n              pubDate={work.pubDate}\r\n            />\r\n          </div>\r\n        ))\r\n      )}\r\n\r\n      <DefaultPagination\r\n        className={styles.pagination}\r\n        onPageChange={onPageChange}\r\n        currentPage={works.currentPage}\r\n        totalPage={works.totalPage} // Calcola il numero totale di pagine\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n// import React, { useEffect } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { CustomSpinner } from \"../loading/Loader\";\r\n// import { ErrorAlert } from \"../error/Error\";\r\n// import { UserCards } from \"../card/UserCard\";\r\n// import { getAllWorks, selectWorks, selectIsLoading, selectError, selectCurrentPage, selectPageSize, selectTotalWorks } from \"../../redux/WorkCardSlice\";\r\n// import styles from \"./workContent.module.css\";\r\n// import { DefaultPagination } from \"../pagination/Pagination\";\r\n\r\n// export const WorksContent = () => {\r\n//   const dispatch = useDispatch();\r\n//   const works = useSelector(selectWorks);\r\n//   const isLoading = useSelector(selectIsLoading);\r\n//   const error = useSelector(selectError);\r\n//   const currentPage = useSelector(selectCurrentPage);\r\n//   const pageSize = useSelector(selectPageSize);\r\n//   const totalWorks = useSelector(selectTotalWorks);\r\n\r\n//   useEffect(() => {\r\n//     dispatch(getAllWorks());\r\n//   }, [dispatch]);\r\n\r\n//   const onPageChange = (page) => {\r\n//     dispatch(getAllWorks({ page }));\r\n//   };\r\n\r\n//   return (\r\n//     <div className={styles.content}>\r\n//       {isLoading && <CustomSpinner />}\r\n//       {!isLoading && error && <ErrorAlert message=\"Ops! Qualcosa è andato storto.\" />}\r\n//       {!isLoading && !error && works && works.map((work) => (\r\n//         <div key={work._id}>\r\n//           <UserCards\r\n//             className={`${styles.card} size-24`}\r\n//             author={work.author}\r\n//             description={work.description}\r\n//             title={work.title}\r\n//             img={work.img}\r\n//             location={work.location}\r\n//             pubDate={work.pubDate}\r\n//           />\r\n//         </div>\r\n//       ))}\r\n//       <DefaultPagination\r\n//         currentPage={currentPage}\r\n//         pageSize={pageSize}\r\n//         totalPage={Math.ceil(totalWorks / pageSize)}\r\n//         onPageChange={onPageChange}\r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}