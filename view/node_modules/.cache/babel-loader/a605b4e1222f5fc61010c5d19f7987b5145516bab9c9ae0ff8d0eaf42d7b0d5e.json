{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { CustomSpinner } from \"../loading/Loader\";\n// import { ErrorAlert } from \"../error/Error\";\n// import { UserCards } from \"../card/UserCard\";\n// import { getAllWorks, allWorks, isWorkLoading, worksError } from \"../../redux/WorkCardSlice\";\n// import styles from \"./workContent.module.css\";\n// import { DefaultPagination } from \"../pagination/Pagination\";\n\n// export const WorksContent = () => {\n//   const dispatch = useDispatch();\n//   const isLoading = useSelector(isWorkLoading);\n//   const error = useSelector(worksError);\n//   const [page, setPage] = useState(1);\n//   const [works, setWorks] = useState([]);\n//   const [totalPages, setTotalPages] = useState(0);\n\n//   const getAllWorks = async () => {\n//     try {\n//       const response = await fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/works?page=${page}`);\n//       const data = await response.json();\n//       setWorks(data.payload); \n//       setTotalPages(data.totalPages); \n//     } catch (error) {\n//       alert(\"Error fetching works:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     getAllWorks();\n//     window.scrollTo(0, 0);\n//   }, [page]);\n\n//   const onPageChange = (newPage) => {\n//     setPage(newPage);\n//   };\n\n//   return (\n//     <div className={`${styles.content}`}>\n//       {isLoading && <CustomSpinner />}\n//       {!isLoading && error && <ErrorAlert message=\"Ops! Qualcosa è andato storto\" />}\n//       {!isLoading && !error && (\n//         works.map((work) => (\n//           <div key={work._id}>\n//             <UserCards\n//               className={`${styles.card}`}\n//               author={work.author}\n//               description={work.description}\n//               title={work.title}\n//               img={work.img}\n//               location={work.location}\n//               pubDate={work.pubDate}\n//               _id={work._id}\n//             />\n//           </div>\n//         ))\n//       )}\n\n//       <DefaultPagination\n//         onPageChange={onPageChange}\n//         currentPage={page}\n//         totalPage={totalPages} \n//       />\n//     </div>\n//   );\n// };\n\n// // import React, { useEffect, useState } from \"react\";\n// // import { useDispatch, useSelector } from \"react-redux\";\n// // import { CustomSpinner } from \"../loading/Loader\";\n// // import { ErrorAlert } from \"../error/Error\";\n// // import { UserCards } from \"../card/UserCard\";\n// // import { getAllWorks, allWorks, isWorkLoading, worksError, selectTotalPage, selectTotalWorks, selectPageSize } from \"../../redux/WorkCardSlice\";\n// // import { DefaultPagination } from \"../pagination/Pagination\";\n// // import styles from \"./workContent.module.css\";\n\n// // export const WorksContent = () => {\n// //   const dispatch = useDispatch();\n// //   const isLoading = useSelector(isWorkLoading);\n// //   const error = useSelector(worksError);\n// //   const works = useSelector(allWorks);\n// //   const totalPage = useSelector(selectTotalPage);\n// //   const totalWorks = useSelector(selectTotalWorks);\n// //   const pageSize = useSelector(selectPageSize);\n// //   const [page, setPage] = useState(1);\n\n// //   useEffect(() => {\n// //     dispatch(getAllWorks(page));\n// //   }, [dispatch, page]);\n\n// //   const onPageChange = (newPage) => {\n// //     setPage(newPage);\n// //   };\n\n// //   return (\n// //     <div className={styles.content}>\n// //       {isLoading && <CustomSpinner />}\n// //       {!isLoading && error && <ErrorAlert message=\"Ops! Qualcosa è andato storto\" />}\n// //       {!isLoading && !error && (\n// //         works.payload &&\n// //         works.payload.map((work) => (\n// //           <div key={work._id}>\n// //             <UserCards\n// //               className={`${styles.card} size-24`}\n// //               author={work.author}\n// //               description={work.description}\n// //               title={work.title}\n// //               img={work.img}\n// //               location={work.location}\n// //               pubDate={work.pubDate}\n// //             />\n// //           </div>\n// //         ))\n// //       )}\n\n// //       <DefaultPagination\n// //         className={styles.pagination}\n// //         onPageChange={onPageChange}\n// //         currentPage={page}\n// //         totalPage={totalPage}\n// //       />\n// //     </div>\n// //   );\n// // };","map":{"version":3,"names":[],"sources":["C:/Users/andre/OneDrive/Desktop/web developer/epicode/esercizi/capstone_Andrea_Frabotta/view/src/components/workContent/WorksContent.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { CustomSpinner } from \"../loading/Loader\";\r\n// import { ErrorAlert } from \"../error/Error\";\r\n// import { UserCards } from \"../card/UserCard\";\r\n// import { getAllWorks, allWorks, isWorkLoading, worksError } from \"../../redux/WorkCardSlice\";\r\n// import styles from \"./workContent.module.css\";\r\n// import { DefaultPagination } from \"../pagination/Pagination\";\r\n\r\n// export const WorksContent = () => {\r\n//   const dispatch = useDispatch();\r\n//   const isLoading = useSelector(isWorkLoading);\r\n//   const error = useSelector(worksError);\r\n//   const [page, setPage] = useState(1);\r\n//   const [works, setWorks] = useState([]);\r\n//   const [totalPages, setTotalPages] = useState(0);\r\n\r\n//   const getAllWorks = async () => {\r\n//     try {\r\n//       const response = await fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/works?page=${page}`);\r\n//       const data = await response.json();\r\n//       setWorks(data.payload); \r\n//       setTotalPages(data.totalPages); \r\n//     } catch (error) {\r\n//       alert(\"Error fetching works:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     getAllWorks();\r\n//     window.scrollTo(0, 0);\r\n//   }, [page]);\r\n\r\n//   const onPageChange = (newPage) => {\r\n//     setPage(newPage);\r\n//   };\r\n\r\n//   return (\r\n//     <div className={`${styles.content}`}>\r\n//       {isLoading && <CustomSpinner />}\r\n//       {!isLoading && error && <ErrorAlert message=\"Ops! Qualcosa è andato storto\" />}\r\n//       {!isLoading && !error && (\r\n//         works.map((work) => (\r\n//           <div key={work._id}>\r\n//             <UserCards\r\n//               className={`${styles.card}`}\r\n//               author={work.author}\r\n//               description={work.description}\r\n//               title={work.title}\r\n//               img={work.img}\r\n//               location={work.location}\r\n//               pubDate={work.pubDate}\r\n//               _id={work._id}\r\n//             />\r\n//           </div>\r\n//         ))\r\n//       )}\r\n\r\n//       <DefaultPagination\r\n//         onPageChange={onPageChange}\r\n//         currentPage={page}\r\n//         totalPage={totalPages} \r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n// // import React, { useEffect, useState } from \"react\";\r\n// // import { useDispatch, useSelector } from \"react-redux\";\r\n// // import { CustomSpinner } from \"../loading/Loader\";\r\n// // import { ErrorAlert } from \"../error/Error\";\r\n// // import { UserCards } from \"../card/UserCard\";\r\n// // import { getAllWorks, allWorks, isWorkLoading, worksError, selectTotalPage, selectTotalWorks, selectPageSize } from \"../../redux/WorkCardSlice\";\r\n// // import { DefaultPagination } from \"../pagination/Pagination\";\r\n// // import styles from \"./workContent.module.css\";\r\n\r\n// // export const WorksContent = () => {\r\n// //   const dispatch = useDispatch();\r\n// //   const isLoading = useSelector(isWorkLoading);\r\n// //   const error = useSelector(worksError);\r\n// //   const works = useSelector(allWorks);\r\n// //   const totalPage = useSelector(selectTotalPage);\r\n// //   const totalWorks = useSelector(selectTotalWorks);\r\n// //   const pageSize = useSelector(selectPageSize);\r\n// //   const [page, setPage] = useState(1);\r\n\r\n// //   useEffect(() => {\r\n// //     dispatch(getAllWorks(page));\r\n// //   }, [dispatch, page]);\r\n\r\n// //   const onPageChange = (newPage) => {\r\n// //     setPage(newPage);\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className={styles.content}>\r\n// //       {isLoading && <CustomSpinner />}\r\n// //       {!isLoading && error && <ErrorAlert message=\"Ops! Qualcosa è andato storto\" />}\r\n// //       {!isLoading && !error && (\r\n// //         works.payload &&\r\n// //         works.payload.map((work) => (\r\n// //           <div key={work._id}>\r\n// //             <UserCards\r\n// //               className={`${styles.card} size-24`}\r\n// //               author={work.author}\r\n// //               description={work.description}\r\n// //               title={work.title}\r\n// //               img={work.img}\r\n// //               location={work.location}\r\n// //               pubDate={work.pubDate}\r\n// //             />\r\n// //           </div>\r\n// //         ))\r\n// //       )}\r\n\r\n// //       <DefaultPagination\r\n// //         className={styles.pagination}\r\n// //         onPageChange={onPageChange}\r\n// //         currentPage={page}\r\n// //         totalPage={totalPage}\r\n// //       />\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}