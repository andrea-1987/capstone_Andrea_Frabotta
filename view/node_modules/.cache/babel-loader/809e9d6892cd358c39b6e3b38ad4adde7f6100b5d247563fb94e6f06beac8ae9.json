{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\OneDrive\\\\Desktop\\\\web developer\\\\epicode\\\\esercizi\\\\capstone_Andrea_Frabotta\\\\view\\\\src\\\\components\\\\workContent\\\\WorksContent.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { CustomSpinner } from \"../loading/Loader\";\n// import { ErrorAlert } from \"../error/Error\";\n// import { UserCards } from \"../card/UserCard\";\n// import { isWorkLoading, worksError } from \"../../redux/WorkCardSlice\";\n// import styles from \"./workContent.module.css\";\n// import { DefaultPagination } from \"../pagination/Pagination\";\n\n// import { setFiltered } from \"../../redux/FilterSlice\";\n\n// export const WorksContent = () => {\n//   const isLoading = useSelector(isWorkLoading);\n//   const error = useSelector(worksError);\n//    const [page, setPage] = useState(1);\n//   const [works, setWorks] = useState([]);\n//   const [totalPages, setTotalPages] = useState(0);\n\n//   const filtered = useSelector(setFiltered); \n\n//   const getAllWorks = async () => {\n//     try {\n//       const response = await fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/works?page=${page}`);\n//       const data = await response.json();\n//       setWorks(data.payload); \n//       setTotalPages(data.totalPages); \n//     } catch (error) {\n//       alert(\"Error fetching works:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     getAllWorks();\n//     window.scrollTo(0, 0);\n\n//   }, [page,filtered]);\n\n//   const onPageChange = (newPage) => {\n//     setPage(newPage);\n//   };\n\n//   return (\n//     <div className={`${styles.content}`}>\n//       {isLoading && <CustomSpinner />}\n//       {!isLoading && error && <ErrorAlert message=\"Ops! Qualcosa è andato storto\" />}\n//       {!isLoading && !error && (\n//       works.map((work) => (\n//           <div key={work._id}>\n//             <UserCards\n//               className={`${styles.card}`}\n//               author={work.author}\n//               description={work.description}\n//               title={work.title}\n//               img={work.img}\n//               location={work.location}\n//               pubDate={work.pubDate}\n//               _id={work._id}\n//             />\n//           </div>\n//         ))\n//       )}\n\n//       <DefaultPagination\n//         onPageChange={onPageChange}\n//         currentPage={page}\n//         totalPage={totalPages} \n//       />\n//     </div>\n//   );\n// };\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CustomSpinner } from \"../loading/Loader\";\nimport { ErrorAlert } from \"../error/Error\";\nimport { UserCards } from \"../card/UserCard\";\nimport { isWorkLoading, worksError, allWorks } from \"../../redux/WorkCardSlice\";\nimport styles from \"./workContent.module.css\";\nimport { DefaultPagination } from \"../pagination/Pagination\";\nimport { setFiltered } from \"../../redux/FilterSlice\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const WorksContent = () => {\n  _s();\n  const isLoading = useSelector(isWorkLoading);\n  const error = useSelector(worksError);\n  const allWorksData = useSelector(allWorks);\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(1);\n  const [filteredWorks, setFilteredWorks] = useState([]);\n  const [jobFilter, setJobFilter] = useState(\"\");\n  const [locationFilter, setLocationFilter] = useState(\"\");\n  useEffect(() => {\n    dispatch(setFiltered({\n      job: jobFilter,\n      location: locationFilter\n    }));\n  }, [dispatch, jobFilter, locationFilter]);\n  useEffect(() => {\n    const filtered = allWorksData.filter(work => {\n      const jobMatch = work.job.toLowerCase().includes(jobFilter.toLowerCase());\n      const locationMatch = work.location.toLowerCase().includes(locationFilter.toLowerCase());\n      return jobMatch && locationMatch;\n    });\n    setFilteredWorks(filtered);\n  }, [allWorksData, jobFilter, locationFilter]);\n  const onPageChange = newPage => {\n    setPage(newPage);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.content}`,\n    children: [isLoading && /*#__PURE__*/_jsxDEV(CustomSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      message: \"Ops! Qualcosa \\xE8 andato storto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 31\n    }, this), !isLoading && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [filteredWorks.map(work => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(UserCards, {\n          className: `${styles.card}`,\n          author: work.author,\n          description: work.description,\n          title: work.title,\n          img: work.img,\n          location: work.location,\n          pubDate: work.pubDate,\n          _id: work._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this)\n      }, work._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(DefaultPagination, {\n        onPageChange: onPageChange,\n        currentPage: page,\n        totalPage: Math.ceil(filteredWorks.length / 3) // Assuming 3 works per page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(WorksContent, \"act99Wer8rsRUWnU+IlPTh24xy8=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n_c = WorksContent;\nvar _c;\n$RefreshReg$(_c, \"WorksContent\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","CustomSpinner","ErrorAlert","UserCards","isWorkLoading","worksError","allWorks","styles","DefaultPagination","setFiltered","jsxDEV","_jsxDEV","Fragment","_Fragment","WorksContent","_s","isLoading","error","allWorksData","dispatch","page","setPage","filteredWorks","setFilteredWorks","jobFilter","setJobFilter","locationFilter","setLocationFilter","job","location","filtered","filter","work","jobMatch","toLowerCase","includes","locationMatch","onPageChange","newPage","className","content","children","fileName","_jsxFileName","lineNumber","columnNumber","message","map","card","author","description","title","img","pubDate","_id","currentPage","totalPage","Math","ceil","length","_c","$RefreshReg$"],"sources":["C:/Users/andre/OneDrive/Desktop/web developer/epicode/esercizi/capstone_Andrea_Frabotta/view/src/components/workContent/WorksContent.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { CustomSpinner } from \"../loading/Loader\";\r\n// import { ErrorAlert } from \"../error/Error\";\r\n// import { UserCards } from \"../card/UserCard\";\r\n// import { isWorkLoading, worksError } from \"../../redux/WorkCardSlice\";\r\n// import styles from \"./workContent.module.css\";\r\n// import { DefaultPagination } from \"../pagination/Pagination\";\r\n\r\n// import { setFiltered } from \"../../redux/FilterSlice\";\r\n\r\n// export const WorksContent = () => {\r\n//   const isLoading = useSelector(isWorkLoading);\r\n//   const error = useSelector(worksError);\r\n//    const [page, setPage] = useState(1);\r\n//   const [works, setWorks] = useState([]);\r\n//   const [totalPages, setTotalPages] = useState(0);\r\n  \r\n//   const filtered = useSelector(setFiltered); \r\n \r\n//   const getAllWorks = async () => {\r\n//     try {\r\n//       const response = await fetch(`${process.env.REACT_APP_SERVER_BASE_URL}/works?page=${page}`);\r\n//       const data = await response.json();\r\n//       setWorks(data.payload); \r\n//       setTotalPages(data.totalPages); \r\n//     } catch (error) {\r\n//       alert(\"Error fetching works:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     getAllWorks();\r\n//     window.scrollTo(0, 0);\r\n    \r\n//   }, [page,filtered]);\r\n\r\n//   const onPageChange = (newPage) => {\r\n//     setPage(newPage);\r\n//   };\r\n\r\n//   return (\r\n//     <div className={`${styles.content}`}>\r\n//       {isLoading && <CustomSpinner />}\r\n//       {!isLoading && error && <ErrorAlert message=\"Ops! Qualcosa è andato storto\" />}\r\n//       {!isLoading && !error && (\r\n//       works.map((work) => (\r\n//           <div key={work._id}>\r\n//             <UserCards\r\n//               className={`${styles.card}`}\r\n//               author={work.author}\r\n//               description={work.description}\r\n//               title={work.title}\r\n//               img={work.img}\r\n//               location={work.location}\r\n//               pubDate={work.pubDate}\r\n//               _id={work._id}\r\n//             />\r\n//           </div>\r\n//         ))\r\n//       )}\r\n\r\n//       <DefaultPagination\r\n//         onPageChange={onPageChange}\r\n//         currentPage={page}\r\n//         totalPage={totalPages} \r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CustomSpinner } from \"../loading/Loader\";\r\nimport { ErrorAlert } from \"../error/Error\";\r\nimport { UserCards } from \"../card/UserCard\";\r\nimport { isWorkLoading, worksError, allWorks } from \"../../redux/WorkCardSlice\";\r\nimport styles from \"./workContent.module.css\";\r\nimport { DefaultPagination } from \"../pagination/Pagination\";\r\nimport { setFiltered } from \"../../redux/FilterSlice\";\r\n\r\nexport const WorksContent = () => {\r\n  const isLoading = useSelector(isWorkLoading);\r\n  const error = useSelector(worksError);\r\n  const allWorksData = useSelector(allWorks);\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = useState(1);\r\n  const [filteredWorks, setFilteredWorks] = useState([]);\r\n  const [jobFilter, setJobFilter] = useState(\"\");\r\n  const [locationFilter, setLocationFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    dispatch(setFiltered({ job: jobFilter, location: locationFilter }));\r\n  }, [dispatch, jobFilter, locationFilter]);\r\n\r\n  useEffect(() => {\r\n    const filtered = allWorksData.filter(work => {\r\n      const jobMatch = work.job.toLowerCase().includes(jobFilter.toLowerCase());\r\n      const locationMatch = work.location.toLowerCase().includes(locationFilter.toLowerCase());\r\n      return jobMatch && locationMatch;\r\n    });\r\n    setFilteredWorks(filtered);\r\n  }, [allWorksData, jobFilter, locationFilter]);\r\n\r\n  const onPageChange = (newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.content}`}>\r\n      {isLoading && <CustomSpinner />}\r\n      {!isLoading && error && <ErrorAlert message=\"Ops! Qualcosa è andato storto\" />}\r\n      {!isLoading && !error && (\r\n        <>\r\n          {filteredWorks.map((work) => (\r\n            <div key={work._id}>\r\n              <UserCards\r\n                className={`${styles.card}`}\r\n                author={work.author}\r\n                description={work.description}\r\n                title={work.title}\r\n                img={work.img}\r\n                location={work.location}\r\n                pubDate={work.pubDate}\r\n                _id={work._id}\r\n              />\r\n            </div>\r\n          ))}\r\n          <DefaultPagination\r\n            onPageChange={onPageChange}\r\n            currentPage={page}\r\n            totalPage={Math.ceil(filteredWorks.length / 3)} // Assuming 3 works per page\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}