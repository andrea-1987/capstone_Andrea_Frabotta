{"ast":null,"code":"// import { createAsyncThunk,createSlice } from \"@reduxjs/toolkit\";\n// import AxiosClient from \"../client/client\";\n\n// const client = new AxiosClient();\n\n// const initialState = {\n//   works: [],\n//   isLoading: false,\n//   error: null,\n//   totalWorks: 0,\n//   currentPage:1,\n//   pageSize:3,\n//   page:1,\n//   totalPage:1,\n// };\n\n// export const getAllWorks = createAsyncThunk(`work/GETWORKS`, async (page) => {\n//     return await client.get(`/works?page=${page}`);\n// });\n\n// const worksSlice = createSlice({\n//     name: \"works\",\n//     initialState,\n//     extraReducers: (builder) => {\n//       builder\n//         .addCase(getAllWorks.pending, (state) => {\n//           state.isLoading = true;\n//         })\n//         .addCase(getAllWorks.fulfilled, (state, action) => { \n//           state.isLoading = false;\n//           state.totalWorks = action.payload.length;\n//           state.works = action.payload;\n//           state.totalPage = Math.ceil(action.payload.length / state.pageSize);\n//         })\n//         .addCase(getAllWorks.rejected, (state) => {\n//           state.isLoading = false;\n//           state.error = \"Ops, an error has occurred.\";\n//         });\n//     },\n//   });\n\n// export const allWorks = (state) => state.worksData.works;\n// export const isWorkLoading = (state) => state.worksData.isLoading;\n// export const worksError = (state) => state.worksData.error;\n// export const selectCurrentPage = (state) => state.worksData.currentPage;\n// export const selectPageSize = (state) => state.worksData.pageSize;\n// export const selectTotalWorks = (state) => state.worksData.totalWorks;\n// export const selectTotalPage =(state)=>state.worksData.totalPage;\n// export default worksSlice.reducer;\n\n// // import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n// // import AxiosClient from \"../client/client\";\n\n// // const client = new AxiosClient();\n\n// // const initialState = {\n// //   works: [],\n// //   isLoading: false,\n// //   error: null,\n// //   totalWorks: 0,\n// //   currentPage: 1,\n// //   pageSize: 4,\n// // };\n\n// // export const getAllWorks = createAsyncThunk(\n// //   \"works/getAllWorks\",\n// //   async (page, { rejectWithValue }) => {\n// //     try {\n// //       const response = await client.get(`/works?page=${page}`);\n// //       return response.data;\n// //     } catch (error) {\n// //       return rejectWithValue(error.response.data);\n// //     }\n// //   }\n// // );\n\n// // const worksSlice = createSlice({\n// //   name: \"works\",\n// //   initialState,\n// //   reducers: {},\n// //   extraReducers: (builder) => {\n// //     builder\n// //       .addCase(getAllWorks.pending, (state) => {\n// //         state.isLoading = true;\n// //         state.error = null;\n// //       })\n// //       .addCase(getAllWorks.fulfilled, (state, action) => {\n// //         state.isLoading = false;\n// //         state.totalWorks = action.payload.totalWorks;\n// //         state.works = action.payload.payload;\n// //       })\n// //       .addCase(getAllWorks.rejected, (state, action) => {\n// //         state.isLoading = false;\n// //         state.error = action.payload.message;\n// //       });\n// //   },\n// // });\n\n// // export const selectWorks = (state) => state.works.works;\n// // export const selectIsLoading = (state) => state.works.isLoading;\n// // export const selectError = (state) => state.works.error;\n// // export const selectCurrentPage = (state) => state.works.currentPage;\n// // export const selectPageSize = (state) => state.works.pageSize;\n// // export const selectTotalWorks = (state) => state.works.totalWorks;\n\n// // export default worksSlice.reducer;\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport AxiosClient from \"../client/client\";\nconst client = new AxiosClient();\nconst initialState = {\n  works: [],\n  isLoading: false,\n  error: null,\n  totalWorks: 0,\n  currentPage: 1,\n  pageSize: 3,\n  totalPage: 1\n};\nexport const getAllWorks = createAsyncThunk(`work/GETWORKS`, async page => {\n  return await client.get(`/works?page=${page}`);\n});\nexport const searchWorks = createAsyncThunk(`work/SEARCHWORKS`, async ({\n  page,\n  filters\n}) => {\n  return await client.get(`/works?page=${page}`, filters);\n});\nconst worksSlice = createSlice({\n  name: \"works\",\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(getAllWorks.pending, state => {\n      state.isLoading = true;\n    }).addCase(getAllWorks.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.totalWorks = action.payload.length;\n      state.works = action.payload;\n      state.totalPage = Math.ceil(action.payload.length / state.pageSize);\n    }).addCase(getAllWorks.rejected, state => {\n      state.isLoading = false;\n      state.error = \"Ops, an error has occurred.\";\n    }).addCase(searchWorks.pending, state => {\n      state.isLoading = true;\n    }).addCase(searchWorks.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.totalWorks = action.payload.length;\n      state.works = action.payload;\n      state.totalPage = Math.ceil(action.payload.length / state.pageSize);\n    }).addCase(searchWorks.rejected, state => {\n      state.isLoading = false;\n      state.error = \"Ops, an error has occurred.\";\n    });\n  }\n});\nexport const allWorks = state => state.worksData.works;\nexport const isWorkLoading = state => state.worksData.isLoading;\nexport const worksError = state => state.worksData.error;\nexport const selectCurrentPage = state => state.worksData.currentPage;\nexport const selectPageSize = state => state.worksData.pageSize;\nexport const selectTotalWorks = state => state.worksData.totalWorks;\nexport const selectTotalPage = state => state.worksData.totalPage;\nexport default worksSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","AxiosClient","client","initialState","works","isLoading","error","totalWorks","currentPage","pageSize","totalPage","getAllWorks","page","get","searchWorks","filters","worksSlice","name","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","length","Math","ceil","rejected","allWorks","worksData","isWorkLoading","worksError","selectCurrentPage","selectPageSize","selectTotalWorks","selectTotalPage","reducer"],"sources":["C:/Users/andre/OneDrive/Desktop/web developer/epicode/esercizi/capstone_Andrea_Frabotta/view/src/redux/WorkCardSlice.js"],"sourcesContent":["// import { createAsyncThunk,createSlice } from \"@reduxjs/toolkit\";\r\n// import AxiosClient from \"../client/client\";\r\n\r\n// const client = new AxiosClient();\r\n\r\n// const initialState = {\r\n//   works: [],\r\n//   isLoading: false,\r\n//   error: null,\r\n//   totalWorks: 0,\r\n//   currentPage:1,\r\n//   pageSize:3,\r\n//   page:1,\r\n//   totalPage:1,\r\n// };\r\n\r\n// export const getAllWorks = createAsyncThunk(`work/GETWORKS`, async (page) => {\r\n//     return await client.get(`/works?page=${page}`);\r\n// });\r\n\r\n// const worksSlice = createSlice({\r\n//     name: \"works\",\r\n//     initialState,\r\n//     extraReducers: (builder) => {\r\n//       builder\r\n//         .addCase(getAllWorks.pending, (state) => {\r\n//           state.isLoading = true;\r\n//         })\r\n//         .addCase(getAllWorks.fulfilled, (state, action) => { \r\n//           state.isLoading = false;\r\n//           state.totalWorks = action.payload.length;\r\n//           state.works = action.payload;\r\n//           state.totalPage = Math.ceil(action.payload.length / state.pageSize);\r\n//         })\r\n//         .addCase(getAllWorks.rejected, (state) => {\r\n//           state.isLoading = false;\r\n//           state.error = \"Ops, an error has occurred.\";\r\n//         });\r\n//     },\r\n//   });\r\n  \r\n\r\n// export const allWorks = (state) => state.worksData.works;\r\n// export const isWorkLoading = (state) => state.worksData.isLoading;\r\n// export const worksError = (state) => state.worksData.error;\r\n// export const selectCurrentPage = (state) => state.worksData.currentPage;\r\n// export const selectPageSize = (state) => state.worksData.pageSize;\r\n// export const selectTotalWorks = (state) => state.worksData.totalWorks;\r\n// export const selectTotalPage =(state)=>state.worksData.totalPage;\r\n// export default worksSlice.reducer;\r\n\r\n\r\n\r\n// // import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n// // import AxiosClient from \"../client/client\";\r\n\r\n// // const client = new AxiosClient();\r\n\r\n// // const initialState = {\r\n// //   works: [],\r\n// //   isLoading: false,\r\n// //   error: null,\r\n// //   totalWorks: 0,\r\n// //   currentPage: 1,\r\n// //   pageSize: 4,\r\n// // };\r\n\r\n// // export const getAllWorks = createAsyncThunk(\r\n// //   \"works/getAllWorks\",\r\n// //   async (page, { rejectWithValue }) => {\r\n// //     try {\r\n// //       const response = await client.get(`/works?page=${page}`);\r\n// //       return response.data;\r\n// //     } catch (error) {\r\n// //       return rejectWithValue(error.response.data);\r\n// //     }\r\n// //   }\r\n// // );\r\n\r\n// // const worksSlice = createSlice({\r\n// //   name: \"works\",\r\n// //   initialState,\r\n// //   reducers: {},\r\n// //   extraReducers: (builder) => {\r\n// //     builder\r\n// //       .addCase(getAllWorks.pending, (state) => {\r\n// //         state.isLoading = true;\r\n// //         state.error = null;\r\n// //       })\r\n// //       .addCase(getAllWorks.fulfilled, (state, action) => {\r\n// //         state.isLoading = false;\r\n// //         state.totalWorks = action.payload.totalWorks;\r\n// //         state.works = action.payload.payload;\r\n// //       })\r\n// //       .addCase(getAllWorks.rejected, (state, action) => {\r\n// //         state.isLoading = false;\r\n// //         state.error = action.payload.message;\r\n// //       });\r\n// //   },\r\n// // });\r\n\r\n// // export const selectWorks = (state) => state.works.works;\r\n// // export const selectIsLoading = (state) => state.works.isLoading;\r\n// // export const selectError = (state) => state.works.error;\r\n// // export const selectCurrentPage = (state) => state.works.currentPage;\r\n// // export const selectPageSize = (state) => state.works.pageSize;\r\n// // export const selectTotalWorks = (state) => state.works.totalWorks;\r\n\r\n// // export default worksSlice.reducer;\r\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport AxiosClient from \"../client/client\";\r\n\r\nconst client = new AxiosClient();\r\n\r\nconst initialState = {\r\n  works: [],\r\n  isLoading: false,\r\n  error: null,\r\n  totalWorks: 0,\r\n  currentPage: 1,\r\n  pageSize: 3,\r\n  totalPage: 1,\r\n};\r\n\r\nexport const getAllWorks = createAsyncThunk(\r\n  `work/GETWORKS`,\r\n  async (page) => {\r\n    return await client.get(`/works?page=${page}`);\r\n  }\r\n);\r\n\r\nexport const searchWorks = createAsyncThunk(\r\n  `work/SEARCHWORKS`,\r\n  async ({ page, filters }) => {\r\n    return await client.get(`/works?page=${page}`, filters);\r\n  }\r\n);\r\n\r\nconst worksSlice = createSlice({\r\n  name: \"works\",\r\n  initialState,\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getAllWorks.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getAllWorks.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.totalWorks = action.payload.length;\r\n        state.works = action.payload;\r\n        state.totalPage = Math.ceil(action.payload.length / state.pageSize);\r\n      })\r\n      .addCase(getAllWorks.rejected, (state) => {\r\n        state.isLoading = false;\r\n        state.error = \"Ops, an error has occurred.\";\r\n      })\r\n      .addCase(searchWorks.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(searchWorks.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.totalWorks = action.payload.length;\r\n        state.works = action.payload;\r\n        state.totalPage = Math.ceil(action.payload.length / state.pageSize);\r\n      })\r\n      .addCase(searchWorks.rejected, (state) => {\r\n        state.isLoading = false;\r\n        state.error = \"Ops, an error has occurred.\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const allWorks = (state) => state.worksData.works;\r\nexport const isWorkLoading = (state) => state.worksData.isLoading;\r\nexport const worksError = (state) => state.worksData.error;\r\nexport const selectCurrentPage = (state) => state.worksData.currentPage;\r\nexport const selectPageSize = (state) => state.worksData.pageSize;\r\nexport const selectTotalWorks = (state) => state.worksData.totalWorks;\r\nexport const selectTotalPage = (state) => state.worksData.totalPage;\r\n\r\nexport default worksSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}